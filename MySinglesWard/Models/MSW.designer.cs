#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MSW
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MSW")]
	public partial class DBmsw : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttSupportedWard(MSW.Model.tSupportedWard instance);
    partial void UpdatetSupportedWard(MSW.Model.tSupportedWard instance);
    partial void DeletetSupportedWard(MSW.Model.tSupportedWard instance);
    partial void Insertt_Picture(MSW.Model.t_Picture instance);
    partial void Updatet_Picture(MSW.Model.t_Picture instance);
    partial void Deletet_Picture(MSW.Model.t_Picture instance);
    partial void InserttSupportedStake(MSW.Model.tSupportedStake instance);
    partial void UpdatetSupportedStake(MSW.Model.tSupportedStake instance);
    partial void DeletetSupportedStake(MSW.Model.tSupportedStake instance);
    partial void InserttWardStake(MSW.Model.tWardStake instance);
    partial void UpdatetWardStake(MSW.Model.tWardStake instance);
    partial void DeletetWardStake(MSW.Model.tWardStake instance);
    partial void InserttStakeData(MSW.Model.tStakeData instance);
    partial void UpdatetStakeData(MSW.Model.tStakeData instance);
    partial void DeletetStakeData(MSW.Model.tStakeData instance);
    partial void InserttGroup(MSW.Model.tGroup instance);
    partial void UpdatetGroup(MSW.Model.tGroup instance);
    partial void DeletetGroup(MSW.Model.tGroup instance);
    partial void InserttMemberGroupRole(MSW.Model.tMemberGroupRole instance);
    partial void UpdatetMemberGroupRole(MSW.Model.tMemberGroupRole instance);
    partial void DeletetMemberGroupRole(MSW.Model.tMemberGroupRole instance);
    partial void InserttGroupUser(MSW.Model.tGroupUser instance);
    partial void UpdatetGroupUser(MSW.Model.tGroupUser instance);
    partial void DeletetGroupUser(MSW.Model.tGroupUser instance);
    partial void InserttNotificationPreference(MSW.Model.tNotificationPreference instance);
    partial void UpdatetNotificationPreference(MSW.Model.tNotificationPreference instance);
    partial void DeletetNotificationPreference(MSW.Model.tNotificationPreference instance);
    partial void InserttMemberRole(MSW.Model.tMemberRole instance);
    partial void UpdatetMemberRole(MSW.Model.tMemberRole instance);
    partial void DeletetMemberRole(MSW.Model.tMemberRole instance);
    partial void InserttBishopricData(MSW.Model.tBishopricData instance);
    partial void UpdatetBishopricData(MSW.Model.tBishopricData instance);
    partial void DeletetBishopricData(MSW.Model.tBishopricData instance);
    partial void InserttOrganizationCoLeader(MSW.Model.tOrganizationCoLeader instance);
    partial void UpdatetOrganizationCoLeader(MSW.Model.tOrganizationCoLeader instance);
    partial void DeletetOrganizationCoLeader(MSW.Model.tOrganizationCoLeader instance);
    partial void InserttPendingRelease(MSW.Model.tPendingRelease instance);
    partial void UpdatetPendingRelease(MSW.Model.tPendingRelease instance);
    partial void DeletetPendingRelease(MSW.Model.tPendingRelease instance);
    partial void InserttOrganization(MSW.Model.tOrganization instance);
    partial void UpdatetOrganization(MSW.Model.tOrganization instance);
    partial void DeletetOrganization(MSW.Model.tOrganization instance);
    partial void InserttCalling(MSW.Model.tCalling instance);
    partial void UpdatetCalling(MSW.Model.tCalling instance);
    partial void DeletetCalling(MSW.Model.tCalling instance);
    partial void InserttStakeUser(MSW.Model.tStakeUser instance);
    partial void UpdatetStakeUser(MSW.Model.tStakeUser instance);
    partial void DeletetStakeUser(MSW.Model.tStakeUser instance);
    partial void InserttStakePhoto(MSW.Model.tStakePhoto instance);
    partial void UpdatetStakePhoto(MSW.Model.tStakePhoto instance);
    partial void DeletetStakePhoto(MSW.Model.tStakePhoto instance);
    partial void InserttSurveyData(MSW.Model.tSurveyData instance);
    partial void UpdatetSurveyData(MSW.Model.tSurveyData instance);
    partial void DeletetSurveyData(MSW.Model.tSurveyData instance);
    partial void InserttMemberTalk(MSW.Model.tMemberTalk instance);
    partial void UpdatetMemberTalk(MSW.Model.tMemberTalk instance);
    partial void DeletetMemberTalk(MSW.Model.tMemberTalk instance);
    partial void InserttWardInfo(MSW.Model.tWardInfo instance);
    partial void UpdatetWardInfo(MSW.Model.tWardInfo instance);
    partial void DeletetWardInfo(MSW.Model.tWardInfo instance);
    partial void InserttPriorUnit(MSW.Model.tPriorUnit instance);
    partial void UpdatetPriorUnit(MSW.Model.tPriorUnit instance);
    partial void DeletetPriorUnit(MSW.Model.tPriorUnit instance);
    partial void InserttNotification(MSW.Model.tNotification instance);
    partial void UpdatetNotification(MSW.Model.tNotification instance);
    partial void DeletetNotification(MSW.Model.tNotification instance);
    partial void InserttNote(MSW.Model.tNote instance);
    partial void UpdatetNote(MSW.Model.tNote instance);
    partial void DeletetNote(MSW.Model.tNote instance);
    partial void InserttPicture(MSW.Model.tPicture instance);
    partial void UpdatetPicture(MSW.Model.tPicture instance);
    partial void DeletetPicture(MSW.Model.tPicture instance);
    partial void InserttResidence(MSW.Model.tResidence instance);
    partial void UpdatetResidence(MSW.Model.tResidence instance);
    partial void DeletetResidence(MSW.Model.tResidence instance);
    partial void InserttOrganizationMember(MSW.Model.tOrganizationMember instance);
    partial void UpdatetOrganizationMember(MSW.Model.tOrganizationMember instance);
    partial void DeletetOrganizationMember(MSW.Model.tOrganizationMember instance);
    partial void InserttUser(MSW.Model.tUser instance);
    partial void UpdatetUser(MSW.Model.tUser instance);
    partial void DeletetUser(MSW.Model.tUser instance);
    partial void InserttCompanionship(MSW.Model.tCompanionship instance);
    partial void UpdatetCompanionship(MSW.Model.tCompanionship instance);
    partial void DeletetCompanionship(MSW.Model.tCompanionship instance);
    partial void InserttTeachingMonth(MSW.Model.tTeachingMonth instance);
    partial void UpdatetTeachingMonth(MSW.Model.tTeachingMonth instance);
    partial void DeletetTeachingMonth(MSW.Model.tTeachingMonth instance);
    partial void InserttTeachingAssignment(MSW.Model.tTeachingAssignment instance);
    partial void UpdatetTeachingAssignment(MSW.Model.tTeachingAssignment instance);
    partial void DeletetTeachingAssignment(MSW.Model.tTeachingAssignment instance);
    partial void InserttTeachingOrganization(MSW.Model.tTeachingOrganization instance);
    partial void UpdatetTeachingOrganization(MSW.Model.tTeachingOrganization instance);
    partial void DeletetTeachingOrganization(MSW.Model.tTeachingOrganization instance);
    partial void InserttDistrict(MSW.Model.tDistrict instance);
    partial void UpdatetDistrict(MSW.Model.tDistrict instance);
    partial void DeletetDistrict(MSW.Model.tDistrict instance);
    partial void InserttTeachingRecord(MSW.Model.tTeachingRecord instance);
    partial void UpdatetTeachingRecord(MSW.Model.tTeachingRecord instance);
    partial void DeletetTeachingRecord(MSW.Model.tTeachingRecord instance);
    partial void InserttTeachingVisit(MSW.Model.tTeachingVisit instance);
    partial void UpdatetTeachingVisit(MSW.Model.tTeachingVisit instance);
    partial void DeletetTeachingVisit(MSW.Model.tTeachingVisit instance);
    partial void InserttTaughtRecord(MSW.Model.tTaughtRecord instance);
    partial void UpdatetTaughtRecord(MSW.Model.tTaughtRecord instance);
    partial void DeletetTaughtRecord(MSW.Model.tTaughtRecord instance);
    #endregion
		
		public DBmsw() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MSWConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBmsw(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBmsw(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBmsw(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBmsw(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MSW.Model.tSupportedWard> tSupportedWards
		{
			get
			{
				return this.GetTable<MSW.Model.tSupportedWard>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.t_Picture> t_Pictures
		{
			get
			{
				return this.GetTable<MSW.Model.t_Picture>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tSupportedStake> tSupportedStakes
		{
			get
			{
				return this.GetTable<MSW.Model.tSupportedStake>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tWardStake> tWardStakes
		{
			get
			{
				return this.GetTable<MSW.Model.tWardStake>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tStakeData> tStakeDatas
		{
			get
			{
				return this.GetTable<MSW.Model.tStakeData>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tGroup> tGroups
		{
			get
			{
				return this.GetTable<MSW.Model.tGroup>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tMemberGroupRole> tMemberGroupRoles
		{
			get
			{
				return this.GetTable<MSW.Model.tMemberGroupRole>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tGroupUser> tGroupUsers
		{
			get
			{
				return this.GetTable<MSW.Model.tGroupUser>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tNotificationPreference> tNotificationPreferences
		{
			get
			{
				return this.GetTable<MSW.Model.tNotificationPreference>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tMemberRole> tMemberRoles
		{
			get
			{
				return this.GetTable<MSW.Model.tMemberRole>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tBishopricData> tBishopricDatas
		{
			get
			{
				return this.GetTable<MSW.Model.tBishopricData>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tOrganizationCoLeader> tOrganizationCoLeaders
		{
			get
			{
				return this.GetTable<MSW.Model.tOrganizationCoLeader>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tPendingRelease> tPendingReleases
		{
			get
			{
				return this.GetTable<MSW.Model.tPendingRelease>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tOrganization> tOrganizations
		{
			get
			{
				return this.GetTable<MSW.Model.tOrganization>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tCalling> tCallings
		{
			get
			{
				return this.GetTable<MSW.Model.tCalling>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tStakeUser> tStakeUsers
		{
			get
			{
				return this.GetTable<MSW.Model.tStakeUser>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tStakePhoto> tStakePhotos
		{
			get
			{
				return this.GetTable<MSW.Model.tStakePhoto>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tSurveyData> tSurveyDatas
		{
			get
			{
				return this.GetTable<MSW.Model.tSurveyData>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tMemberTalk> tMemberTalks
		{
			get
			{
				return this.GetTable<MSW.Model.tMemberTalk>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tWardInfo> tWardInfos
		{
			get
			{
				return this.GetTable<MSW.Model.tWardInfo>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tPriorUnit> tPriorUnits
		{
			get
			{
				return this.GetTable<MSW.Model.tPriorUnit>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tNotification> tNotifications
		{
			get
			{
				return this.GetTable<MSW.Model.tNotification>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tNote> tNotes
		{
			get
			{
				return this.GetTable<MSW.Model.tNote>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tPicture> tPictures
		{
			get
			{
				return this.GetTable<MSW.Model.tPicture>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tResidence> tResidences
		{
			get
			{
				return this.GetTable<MSW.Model.tResidence>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tOrganizationMember> tOrganizationMembers
		{
			get
			{
				return this.GetTable<MSW.Model.tOrganizationMember>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tUser> tUsers
		{
			get
			{
				return this.GetTable<MSW.Model.tUser>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tCompanionship> tCompanionships
		{
			get
			{
				return this.GetTable<MSW.Model.tCompanionship>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tTeachingMonth> tTeachingMonths
		{
			get
			{
				return this.GetTable<MSW.Model.tTeachingMonth>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tTeachingAssignment> tTeachingAssignments
		{
			get
			{
				return this.GetTable<MSW.Model.tTeachingAssignment>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tTeachingOrganization> tTeachingOrganizations
		{
			get
			{
				return this.GetTable<MSW.Model.tTeachingOrganization>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tDistrict> tDistricts
		{
			get
			{
				return this.GetTable<MSW.Model.tDistrict>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tTeachingRecord> tTeachingRecords
		{
			get
			{
				return this.GetTable<MSW.Model.tTeachingRecord>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tTeachingVisit> tTeachingVisits
		{
			get
			{
				return this.GetTable<MSW.Model.tTeachingVisit>();
			}
		}
		
		public System.Data.Linq.Table<MSW.Model.tTaughtRecord> tTaughtRecords
		{
			get
			{
				return this.GetTable<MSW.Model.tTaughtRecord>();
			}
		}
	}
}
namespace MSW.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_SupportedWards")]
	public partial class tSupportedWard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private double _WardStakeID;
		
		private string _Location;
		
		private string _Ward;
		
		private string _Stake;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWardStakeIDChanging(double value);
    partial void OnWardStakeIDChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnWardChanging(string value);
    partial void OnWardChanged();
    partial void OnStakeChanging(string value);
    partial void OnStakeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public tSupportedWard()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardStakeID", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double WardStakeID
		{
			get
			{
				return this._WardStakeID;
			}
			set
			{
				if ((this._WardStakeID != value))
				{
					this.OnWardStakeIDChanging(value);
					this.SendPropertyChanging();
					this._WardStakeID = value;
					this.SendPropertyChanged("WardStakeID");
					this.OnWardStakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ward", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ward
		{
			get
			{
				return this._Ward;
			}
			set
			{
				if ((this._Ward != value))
				{
					this.OnWardChanging(value);
					this.SendPropertyChanging();
					this._Ward = value;
					this.SendPropertyChanged("Ward");
					this.OnWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stake", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Stake
		{
			get
			{
				return this._Stake;
			}
			set
			{
				if ((this._Stake != value))
				{
					this.OnStakeChanging(value);
					this.SendPropertyChanging();
					this._Stake = value;
					this.SendPropertyChanged("Stake");
					this.OnStakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Pictures")]
	public partial class t_Picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfPicID;
		
		private System.Data.Linq.Binary _PictureData;
		
		private string _ContentType;
		
		private System.Nullable<bool> _beenCropped;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfPicIDChanging(int value);
    partial void OnProfPicIDChanged();
    partial void OnPictureDataChanging(System.Data.Linq.Binary value);
    partial void OnPictureDataChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnbeenCroppedChanging(System.Nullable<bool> value);
    partial void OnbeenCroppedChanged();
    #endregion
		
		public t_Picture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfPicID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProfPicID
		{
			get
			{
				return this._ProfPicID;
			}
			set
			{
				if ((this._ProfPicID != value))
				{
					this.OnProfPicIDChanging(value);
					this.SendPropertyChanging();
					this._ProfPicID = value;
					this.SendPropertyChanged("ProfPicID");
					this.OnProfPicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PictureData", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PictureData
		{
			get
			{
				return this._PictureData;
			}
			set
			{
				if ((this._PictureData != value))
				{
					this.OnPictureDataChanging(value);
					this.SendPropertyChanging();
					this._PictureData = value;
					this.SendPropertyChanged("PictureData");
					this.OnPictureDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beenCropped", DbType="Bit")]
		public System.Nullable<bool> beenCropped
		{
			get
			{
				return this._beenCropped;
			}
			set
			{
				if ((this._beenCropped != value))
				{
					this.OnbeenCroppedChanging(value);
					this.SendPropertyChanging();
					this._beenCropped = value;
					this.SendPropertyChanged("beenCropped");
					this.OnbeenCroppedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tSupportedStakes")]
	public partial class tSupportedStake : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private double _StakeID;
		
		private string _Location;
		
		private string _Stake;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStakeIDChanging(double value);
    partial void OnStakeIDChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStakeChanging(string value);
    partial void OnStakeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public tSupportedStake()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StakeID", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double StakeID
		{
			get
			{
				return this._StakeID;
			}
			set
			{
				if ((this._StakeID != value))
				{
					this.OnStakeIDChanging(value);
					this.SendPropertyChanging();
					this._StakeID = value;
					this.SendPropertyChanged("StakeID");
					this.OnStakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stake", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Stake
		{
			get
			{
				return this._Stake;
			}
			set
			{
				if ((this._Stake != value))
				{
					this.OnStakeChanging(value);
					this.SendPropertyChanging();
					this._Stake = value;
					this.SendPropertyChanged("Stake");
					this.OnStakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tWardStake")]
	public partial class tWardStake : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private double _WardStakeID;
		
		private double _StakeID;
		
		private bool _Approved;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWardStakeIDChanging(double value);
    partial void OnWardStakeIDChanged();
    partial void OnStakeIDChanging(double value);
    partial void OnStakeIDChanged();
    partial void OnApprovedChanging(bool value);
    partial void OnApprovedChanged();
    #endregion
		
		public tWardStake()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardStakeID", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double WardStakeID
		{
			get
			{
				return this._WardStakeID;
			}
			set
			{
				if ((this._WardStakeID != value))
				{
					this.OnWardStakeIDChanging(value);
					this.SendPropertyChanging();
					this._WardStakeID = value;
					this.SendPropertyChanged("WardStakeID");
					this.OnWardStakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StakeID", DbType="Float NOT NULL")]
		public double StakeID
		{
			get
			{
				return this._StakeID;
			}
			set
			{
				if ((this._StakeID != value))
				{
					this.OnStakeIDChanging(value);
					this.SendPropertyChanging();
					this._StakeID = value;
					this.SendPropertyChanged("StakeID");
					this.OnStakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Bit NOT NULL")]
		public bool Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStakeData")]
	public partial class tStakeData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _StakeName;
		
		private string _StakeCalling;
		
		private string _StakePhone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnStakeNameChanging(string value);
    partial void OnStakeNameChanged();
    partial void OnStakeCallingChanging(string value);
    partial void OnStakeCallingChanged();
    partial void OnStakePhoneChanging(string value);
    partial void OnStakePhoneChanged();
    #endregion
		
		public tStakeData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StakeName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StakeName
		{
			get
			{
				return this._StakeName;
			}
			set
			{
				if ((this._StakeName != value))
				{
					this.OnStakeNameChanging(value);
					this.SendPropertyChanging();
					this._StakeName = value;
					this.SendPropertyChanged("StakeName");
					this.OnStakeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StakeCalling", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StakeCalling
		{
			get
			{
				return this._StakeCalling;
			}
			set
			{
				if ((this._StakeCalling != value))
				{
					this.OnStakeCallingChanging(value);
					this.SendPropertyChanging();
					this._StakeCalling = value;
					this.SendPropertyChanged("StakeCalling");
					this.OnStakeCallingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StakePhone", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StakePhone
		{
			get
			{
				return this._StakePhone;
			}
			set
			{
				if ((this._StakePhone != value))
				{
					this.OnStakePhoneChanging(value);
					this.SendPropertyChanging();
					this._StakePhone = value;
					this.SendPropertyChanged("StakePhone");
					this.OnStakePhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tGroup")]
	public partial class tGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupID;
		
		private double _WardStakeID;
		
		private int _Type;
		
		private string _Name;
		
		private System.Nullable<int> _LeaderID;
		
		private System.Nullable<int> _CoLeaderID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnWardStakeIDChanging(double value);
    partial void OnWardStakeIDChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLeaderIDChanging(System.Nullable<int> value);
    partial void OnLeaderIDChanged();
    partial void OnCoLeaderIDChanging(System.Nullable<int> value);
    partial void OnCoLeaderIDChanged();
    #endregion
		
		public tGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardStakeID", DbType="Float NOT NULL")]
		public double WardStakeID
		{
			get
			{
				return this._WardStakeID;
			}
			set
			{
				if ((this._WardStakeID != value))
				{
					this.OnWardStakeIDChanging(value);
					this.SendPropertyChanging();
					this._WardStakeID = value;
					this.SendPropertyChanged("WardStakeID");
					this.OnWardStakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderID", DbType="Int")]
		public System.Nullable<int> LeaderID
		{
			get
			{
				return this._LeaderID;
			}
			set
			{
				if ((this._LeaderID != value))
				{
					this.OnLeaderIDChanging(value);
					this.SendPropertyChanging();
					this._LeaderID = value;
					this.SendPropertyChanged("LeaderID");
					this.OnLeaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoLeaderID", DbType="Int")]
		public System.Nullable<int> CoLeaderID
		{
			get
			{
				return this._CoLeaderID;
			}
			set
			{
				if ((this._CoLeaderID != value))
				{
					this.OnCoLeaderIDChanging(value);
					this.SendPropertyChanging();
					this._CoLeaderID = value;
					this.SendPropertyChanged("CoLeaderID");
					this.OnCoLeaderIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tMemberGroupRoles")]
	public partial class tMemberGroupRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private int _Stake;
		
		private int _Bishopric;
		
		private int _EldersQuorum;
		
		private int _ReliefSociety;
		
		private int _Activities;
		
		private int _FHE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnStakeChanging(int value);
    partial void OnStakeChanged();
    partial void OnBishopricChanging(int value);
    partial void OnBishopricChanged();
    partial void OnEldersQuorumChanging(int value);
    partial void OnEldersQuorumChanged();
    partial void OnReliefSocietyChanging(int value);
    partial void OnReliefSocietyChanged();
    partial void OnActivitiesChanging(int value);
    partial void OnActivitiesChanged();
    partial void OnFHEChanging(int value);
    partial void OnFHEChanged();
    #endregion
		
		public tMemberGroupRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stake", DbType="Int NOT NULL")]
		public int Stake
		{
			get
			{
				return this._Stake;
			}
			set
			{
				if ((this._Stake != value))
				{
					this.OnStakeChanging(value);
					this.SendPropertyChanging();
					this._Stake = value;
					this.SendPropertyChanged("Stake");
					this.OnStakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bishopric", DbType="Int NOT NULL")]
		public int Bishopric
		{
			get
			{
				return this._Bishopric;
			}
			set
			{
				if ((this._Bishopric != value))
				{
					this.OnBishopricChanging(value);
					this.SendPropertyChanging();
					this._Bishopric = value;
					this.SendPropertyChanged("Bishopric");
					this.OnBishopricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EldersQuorum", DbType="Int NOT NULL")]
		public int EldersQuorum
		{
			get
			{
				return this._EldersQuorum;
			}
			set
			{
				if ((this._EldersQuorum != value))
				{
					this.OnEldersQuorumChanging(value);
					this.SendPropertyChanging();
					this._EldersQuorum = value;
					this.SendPropertyChanged("EldersQuorum");
					this.OnEldersQuorumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReliefSociety", DbType="Int NOT NULL")]
		public int ReliefSociety
		{
			get
			{
				return this._ReliefSociety;
			}
			set
			{
				if ((this._ReliefSociety != value))
				{
					this.OnReliefSocietyChanging(value);
					this.SendPropertyChanging();
					this._ReliefSociety = value;
					this.SendPropertyChanged("ReliefSociety");
					this.OnReliefSocietyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="Int NOT NULL")]
		public int Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FHE", DbType="Int NOT NULL")]
		public int FHE
		{
			get
			{
				return this._FHE;
			}
			set
			{
				if ((this._FHE != value))
				{
					this.OnFHEChanging(value);
					this.SendPropertyChanging();
					this._FHE = value;
					this.SendPropertyChanged("FHE");
					this.OnFHEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tGroupUser")]
	public partial class tGroupUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _GroupID;
		
		private double _MemberID;
		
		private bool _Leader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnGroupIDChanging(int value);
    partial void OnGroupIDChanged();
    partial void OnMemberIDChanging(double value);
    partial void OnMemberIDChanged();
    partial void OnLeaderChanging(bool value);
    partial void OnLeaderChanged();
    #endregion
		
		public tGroupUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int NOT NULL")]
		public int GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Float NOT NULL")]
		public double MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leader", DbType="Bit NOT NULL")]
		public bool Leader
		{
			get
			{
				return this._Leader;
			}
			set
			{
				if ((this._Leader != value))
				{
					this.OnLeaderChanging(value);
					this.SendPropertyChanging();
					this._Leader = value;
					this.SendPropertyChanged("Leader");
					this.OnLeaderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tNotificationPreference")]
	public partial class tNotificationPreference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private bool _txt;
		
		private string _carrier;
		
		private bool _email;
		
		private bool _stake;
		
		private bool _ward;
		
		private bool _elders;
		
		private bool _reliefsociety;
		
		private bool _activities;
		
		private bool _fhe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OntxtChanging(bool value);
    partial void OntxtChanged();
    partial void OncarrierChanging(string value);
    partial void OncarrierChanged();
    partial void OnemailChanging(bool value);
    partial void OnemailChanged();
    partial void OnstakeChanging(bool value);
    partial void OnstakeChanged();
    partial void OnwardChanging(bool value);
    partial void OnwardChanged();
    partial void OneldersChanging(bool value);
    partial void OneldersChanged();
    partial void OnreliefsocietyChanging(bool value);
    partial void OnreliefsocietyChanged();
    partial void OnactivitiesChanging(bool value);
    partial void OnactivitiesChanged();
    partial void OnfheChanging(bool value);
    partial void OnfheChanged();
    #endregion
		
		public tNotificationPreference()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_txt", DbType="Bit NOT NULL")]
		public bool txt
		{
			get
			{
				return this._txt;
			}
			set
			{
				if ((this._txt != value))
				{
					this.OntxtChanging(value);
					this.SendPropertyChanging();
					this._txt = value;
					this.SendPropertyChanged("txt");
					this.OntxtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carrier", DbType="VarChar(50)")]
		public string carrier
		{
			get
			{
				return this._carrier;
			}
			set
			{
				if ((this._carrier != value))
				{
					this.OncarrierChanging(value);
					this.SendPropertyChanging();
					this._carrier = value;
					this.SendPropertyChanged("carrier");
					this.OncarrierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="Bit NOT NULL")]
		public bool email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stake", DbType="Bit NOT NULL")]
		public bool stake
		{
			get
			{
				return this._stake;
			}
			set
			{
				if ((this._stake != value))
				{
					this.OnstakeChanging(value);
					this.SendPropertyChanging();
					this._stake = value;
					this.SendPropertyChanged("stake");
					this.OnstakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ward", DbType="Bit NOT NULL")]
		public bool ward
		{
			get
			{
				return this._ward;
			}
			set
			{
				if ((this._ward != value))
				{
					this.OnwardChanging(value);
					this.SendPropertyChanging();
					this._ward = value;
					this.SendPropertyChanged("ward");
					this.OnwardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_elders", DbType="Bit NOT NULL")]
		public bool elders
		{
			get
			{
				return this._elders;
			}
			set
			{
				if ((this._elders != value))
				{
					this.OneldersChanging(value);
					this.SendPropertyChanging();
					this._elders = value;
					this.SendPropertyChanged("elders");
					this.OneldersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reliefsociety", DbType="Bit NOT NULL")]
		public bool reliefsociety
		{
			get
			{
				return this._reliefsociety;
			}
			set
			{
				if ((this._reliefsociety != value))
				{
					this.OnreliefsocietyChanging(value);
					this.SendPropertyChanging();
					this._reliefsociety = value;
					this.SendPropertyChanged("reliefsociety");
					this.OnreliefsocietyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activities", DbType="Bit NOT NULL")]
		public bool activities
		{
			get
			{
				return this._activities;
			}
			set
			{
				if ((this._activities != value))
				{
					this.OnactivitiesChanging(value);
					this.SendPropertyChanging();
					this._activities = value;
					this.SendPropertyChanged("activities");
					this.OnactivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fhe", DbType="Bit NOT NULL")]
		public bool fhe
		{
			get
			{
				return this._fhe;
			}
			set
			{
				if ((this._fhe != value))
				{
					this.OnfheChanging(value);
					this.SendPropertyChanging();
					this._fhe = value;
					this.SendPropertyChanged("fhe");
					this.OnfheChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tMemberRoles")]
	public partial class tMemberRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private int _Activities;
		
		private int _Bishopric;
		
		private int _Clerk;
		
		private int _Elders_Quorum;
		
		private int _Emergency;
		
		private int _Employment;
		
		private int _FHE;
		
		private int _Institute;
		
		private int _Mission;
		
		private int _Music;
		
		private int _Relief_Society;
		
		private int _Teaching;
		
		private int _Temple;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnActivitiesChanging(int value);
    partial void OnActivitiesChanged();
    partial void OnBishopricChanging(int value);
    partial void OnBishopricChanged();
    partial void OnClerkChanging(int value);
    partial void OnClerkChanged();
    partial void OnElders_QuorumChanging(int value);
    partial void OnElders_QuorumChanged();
    partial void OnEmergencyChanging(int value);
    partial void OnEmergencyChanged();
    partial void OnEmploymentChanging(int value);
    partial void OnEmploymentChanged();
    partial void OnFHEChanging(int value);
    partial void OnFHEChanged();
    partial void OnInstituteChanging(int value);
    partial void OnInstituteChanged();
    partial void OnMissionChanging(int value);
    partial void OnMissionChanged();
    partial void OnMusicChanging(int value);
    partial void OnMusicChanged();
    partial void OnRelief_SocietyChanging(int value);
    partial void OnRelief_SocietyChanged();
    partial void OnTeachingChanging(int value);
    partial void OnTeachingChanged();
    partial void OnTempleChanging(int value);
    partial void OnTempleChanged();
    #endregion
		
		public tMemberRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="Int NOT NULL")]
		public int Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bishopric", DbType="Int NOT NULL")]
		public int Bishopric
		{
			get
			{
				return this._Bishopric;
			}
			set
			{
				if ((this._Bishopric != value))
				{
					this.OnBishopricChanging(value);
					this.SendPropertyChanging();
					this._Bishopric = value;
					this.SendPropertyChanged("Bishopric");
					this.OnBishopricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clerk", DbType="Int NOT NULL")]
		public int Clerk
		{
			get
			{
				return this._Clerk;
			}
			set
			{
				if ((this._Clerk != value))
				{
					this.OnClerkChanging(value);
					this.SendPropertyChanging();
					this._Clerk = value;
					this.SendPropertyChanged("Clerk");
					this.OnClerkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Elders_Quorum", DbType="Int NOT NULL")]
		public int Elders_Quorum
		{
			get
			{
				return this._Elders_Quorum;
			}
			set
			{
				if ((this._Elders_Quorum != value))
				{
					this.OnElders_QuorumChanging(value);
					this.SendPropertyChanging();
					this._Elders_Quorum = value;
					this.SendPropertyChanged("Elders_Quorum");
					this.OnElders_QuorumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emergency", DbType="Int NOT NULL")]
		public int Emergency
		{
			get
			{
				return this._Emergency;
			}
			set
			{
				if ((this._Emergency != value))
				{
					this.OnEmergencyChanging(value);
					this.SendPropertyChanging();
					this._Emergency = value;
					this.SendPropertyChanged("Emergency");
					this.OnEmergencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employment", DbType="Int NOT NULL")]
		public int Employment
		{
			get
			{
				return this._Employment;
			}
			set
			{
				if ((this._Employment != value))
				{
					this.OnEmploymentChanging(value);
					this.SendPropertyChanging();
					this._Employment = value;
					this.SendPropertyChanged("Employment");
					this.OnEmploymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FHE", DbType="Int NOT NULL")]
		public int FHE
		{
			get
			{
				return this._FHE;
			}
			set
			{
				if ((this._FHE != value))
				{
					this.OnFHEChanging(value);
					this.SendPropertyChanging();
					this._FHE = value;
					this.SendPropertyChanged("FHE");
					this.OnFHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Institute", DbType="Int NOT NULL")]
		public int Institute
		{
			get
			{
				return this._Institute;
			}
			set
			{
				if ((this._Institute != value))
				{
					this.OnInstituteChanging(value);
					this.SendPropertyChanging();
					this._Institute = value;
					this.SendPropertyChanged("Institute");
					this.OnInstituteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission", DbType="Int NOT NULL")]
		public int Mission
		{
			get
			{
				return this._Mission;
			}
			set
			{
				if ((this._Mission != value))
				{
					this.OnMissionChanging(value);
					this.SendPropertyChanging();
					this._Mission = value;
					this.SendPropertyChanged("Mission");
					this.OnMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Music", DbType="Int NOT NULL")]
		public int Music
		{
			get
			{
				return this._Music;
			}
			set
			{
				if ((this._Music != value))
				{
					this.OnMusicChanging(value);
					this.SendPropertyChanging();
					this._Music = value;
					this.SendPropertyChanged("Music");
					this.OnMusicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relief_Society", DbType="Int NOT NULL")]
		public int Relief_Society
		{
			get
			{
				return this._Relief_Society;
			}
			set
			{
				if ((this._Relief_Society != value))
				{
					this.OnRelief_SocietyChanging(value);
					this.SendPropertyChanging();
					this._Relief_Society = value;
					this.SendPropertyChanged("Relief_Society");
					this.OnRelief_SocietyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teaching", DbType="Int NOT NULL")]
		public int Teaching
		{
			get
			{
				return this._Teaching;
			}
			set
			{
				if ((this._Teaching != value))
				{
					this.OnTeachingChanging(value);
					this.SendPropertyChanging();
					this._Teaching = value;
					this.SendPropertyChanged("Teaching");
					this.OnTeachingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temple", DbType="Int NOT NULL")]
		public int Temple
		{
			get
			{
				return this._Temple;
			}
			set
			{
				if ((this._Temple != value))
				{
					this.OnTempleChanging(value);
					this.SendPropertyChanging();
					this._Temple = value;
					this.SendPropertyChanged("Temple");
					this.OnTempleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_BishopricData")]
	public partial class tBishopricData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _BishopricName;
		
		private string _BishopricCalling;
		
		private string _BishopricPhone;
		
		private string _BishopricAddress;
		
		private string _WifeName;
		
		private string _WifePhone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnBishopricNameChanging(string value);
    partial void OnBishopricNameChanged();
    partial void OnBishopricCallingChanging(string value);
    partial void OnBishopricCallingChanged();
    partial void OnBishopricPhoneChanging(string value);
    partial void OnBishopricPhoneChanged();
    partial void OnBishopricAddressChanging(string value);
    partial void OnBishopricAddressChanged();
    partial void OnWifeNameChanging(string value);
    partial void OnWifeNameChanged();
    partial void OnWifePhoneChanging(string value);
    partial void OnWifePhoneChanged();
    #endregion
		
		public tBishopricData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BishopricName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BishopricName
		{
			get
			{
				return this._BishopricName;
			}
			set
			{
				if ((this._BishopricName != value))
				{
					this.OnBishopricNameChanging(value);
					this.SendPropertyChanging();
					this._BishopricName = value;
					this.SendPropertyChanged("BishopricName");
					this.OnBishopricNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BishopricCalling", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BishopricCalling
		{
			get
			{
				return this._BishopricCalling;
			}
			set
			{
				if ((this._BishopricCalling != value))
				{
					this.OnBishopricCallingChanging(value);
					this.SendPropertyChanging();
					this._BishopricCalling = value;
					this.SendPropertyChanged("BishopricCalling");
					this.OnBishopricCallingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BishopricPhone", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BishopricPhone
		{
			get
			{
				return this._BishopricPhone;
			}
			set
			{
				if ((this._BishopricPhone != value))
				{
					this.OnBishopricPhoneChanging(value);
					this.SendPropertyChanging();
					this._BishopricPhone = value;
					this.SendPropertyChanged("BishopricPhone");
					this.OnBishopricPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BishopricAddress", DbType="VarChar(MAX)")]
		public string BishopricAddress
		{
			get
			{
				return this._BishopricAddress;
			}
			set
			{
				if ((this._BishopricAddress != value))
				{
					this.OnBishopricAddressChanging(value);
					this.SendPropertyChanging();
					this._BishopricAddress = value;
					this.SendPropertyChanged("BishopricAddress");
					this.OnBishopricAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WifeName", DbType="VarChar(MAX)")]
		public string WifeName
		{
			get
			{
				return this._WifeName;
			}
			set
			{
				if ((this._WifeName != value))
				{
					this.OnWifeNameChanging(value);
					this.SendPropertyChanging();
					this._WifeName = value;
					this.SendPropertyChanged("WifeName");
					this.OnWifeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WifePhone", DbType="VarChar(50)")]
		public string WifePhone
		{
			get
			{
				return this._WifePhone;
			}
			set
			{
				if ((this._WifePhone != value))
				{
					this.OnWifePhoneChanging(value);
					this.SendPropertyChanging();
					this._WifePhone = value;
					this.SendPropertyChanged("WifePhone");
					this.OnWifePhoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tOrganizationCoLeader")]
	public partial class tOrganizationCoLeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _OrgID;
		
		private int _CoLeaderID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnOrgIDChanging(int value);
    partial void OnOrgIDChanged();
    partial void OnCoLeaderIDChanging(int value);
    partial void OnCoLeaderIDChanged();
    #endregion
		
		public tOrganizationCoLeader()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoLeaderID", DbType="Int NOT NULL")]
		public int CoLeaderID
		{
			get
			{
				return this._CoLeaderID;
			}
			set
			{
				if ((this._CoLeaderID != value))
				{
					this.OnCoLeaderIDChanging(value);
					this.SendPropertyChanging();
					this._CoLeaderID = value;
					this.SendPropertyChanged("CoLeaderID");
					this.OnCoLeaderIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPendingReleases")]
	public partial class tPendingRelease : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private double _WardID;
		
		private int _OrgID;
		
		private int _CallingID;
		
		private int _MemberID;
		
		private System.DateTime _CalledDate;
		
		private System.Nullable<System.DateTime> _SustainedDate;
		
		private System.Nullable<System.DateTime> _SetApartDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnWardIDChanging(double value);
    partial void OnWardIDChanged();
    partial void OnOrgIDChanging(int value);
    partial void OnOrgIDChanged();
    partial void OnCallingIDChanging(int value);
    partial void OnCallingIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnCalledDateChanging(System.DateTime value);
    partial void OnCalledDateChanged();
    partial void OnSustainedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSustainedDateChanged();
    partial void OnSetApartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSetApartDateChanged();
    #endregion
		
		public tPendingRelease()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardID", DbType="Float NOT NULL")]
		public double WardID
		{
			get
			{
				return this._WardID;
			}
			set
			{
				if ((this._WardID != value))
				{
					this.OnWardIDChanging(value);
					this.SendPropertyChanging();
					this._WardID = value;
					this.SendPropertyChanged("WardID");
					this.OnWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallingID", DbType="Int NOT NULL")]
		public int CallingID
		{
			get
			{
				return this._CallingID;
			}
			set
			{
				if ((this._CallingID != value))
				{
					this.OnCallingIDChanging(value);
					this.SendPropertyChanging();
					this._CallingID = value;
					this.SendPropertyChanged("CallingID");
					this.OnCallingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalledDate", DbType="Date NOT NULL")]
		public System.DateTime CalledDate
		{
			get
			{
				return this._CalledDate;
			}
			set
			{
				if ((this._CalledDate != value))
				{
					this.OnCalledDateChanging(value);
					this.SendPropertyChanging();
					this._CalledDate = value;
					this.SendPropertyChanged("CalledDate");
					this.OnCalledDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SustainedDate", DbType="Date")]
		public System.Nullable<System.DateTime> SustainedDate
		{
			get
			{
				return this._SustainedDate;
			}
			set
			{
				if ((this._SustainedDate != value))
				{
					this.OnSustainedDateChanging(value);
					this.SendPropertyChanging();
					this._SustainedDate = value;
					this.SendPropertyChanged("SustainedDate");
					this.OnSustainedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetApartDate", DbType="Date")]
		public System.Nullable<System.DateTime> SetApartDate
		{
			get
			{
				return this._SetApartDate;
			}
			set
			{
				if ((this._SetApartDate != value))
				{
					this.OnSetApartDateChanging(value);
					this.SendPropertyChanging();
					this._SetApartDate = value;
					this.SendPropertyChanged("SetApartDate");
					this.OnSetApartDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tOrganization")]
	public partial class tOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrgID;
		
		private double _WardID;
		
		private System.Nullable<int> _LeaderCallingID;
		
		private string _Title;
		
		private string _ReportID;
		
		private int _SortID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgIDChanging(int value);
    partial void OnOrgIDChanged();
    partial void OnWardIDChanging(double value);
    partial void OnWardIDChanged();
    partial void OnLeaderCallingIDChanging(System.Nullable<int> value);
    partial void OnLeaderCallingIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnReportIDChanging(string value);
    partial void OnReportIDChanged();
    partial void OnSortIDChanging(int value);
    partial void OnSortIDChanged();
    #endregion
		
		public tOrganization()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardID", DbType="Float NOT NULL")]
		public double WardID
		{
			get
			{
				return this._WardID;
			}
			set
			{
				if ((this._WardID != value))
				{
					this.OnWardIDChanging(value);
					this.SendPropertyChanging();
					this._WardID = value;
					this.SendPropertyChanged("WardID");
					this.OnWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderCallingID", DbType="Int")]
		public System.Nullable<int> LeaderCallingID
		{
			get
			{
				return this._LeaderCallingID;
			}
			set
			{
				if ((this._LeaderCallingID != value))
				{
					this.OnLeaderCallingIDChanging(value);
					this.SendPropertyChanging();
					this._LeaderCallingID = value;
					this.SendPropertyChanged("LeaderCallingID");
					this.OnLeaderCallingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportID", DbType="VarChar(50)")]
		public string ReportID
		{
			get
			{
				return this._ReportID;
			}
			set
			{
				if ((this._ReportID != value))
				{
					this.OnReportIDChanging(value);
					this.SendPropertyChanging();
					this._ReportID = value;
					this.SendPropertyChanged("ReportID");
					this.OnReportIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortID", DbType="Int NOT NULL")]
		public int SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCalling")]
	public partial class tCalling : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CallingID;
		
		private int _OrgID;
		
		private string _Title;
		
		private int _MemberID;
		
		private System.Nullable<System.DateTime> _Approved;
		
		private System.Nullable<System.DateTime> _Called;
		
		private System.Nullable<System.DateTime> _Sustained;
		
		private System.Nullable<System.DateTime> _SetApart;
		
		private bool _ITStake;
		
		private int _SortID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCallingIDChanging(int value);
    partial void OnCallingIDChanged();
    partial void OnOrgIDChanging(int value);
    partial void OnOrgIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnApprovedChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedChanged();
    partial void OnCalledChanging(System.Nullable<System.DateTime> value);
    partial void OnCalledChanged();
    partial void OnSustainedChanging(System.Nullable<System.DateTime> value);
    partial void OnSustainedChanged();
    partial void OnSetApartChanging(System.Nullable<System.DateTime> value);
    partial void OnSetApartChanged();
    partial void OnITStakeChanging(bool value);
    partial void OnITStakeChanged();
    partial void OnSortIDChanging(int value);
    partial void OnSortIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tCalling()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CallingID
		{
			get
			{
				return this._CallingID;
			}
			set
			{
				if ((this._CallingID != value))
				{
					this.OnCallingIDChanging(value);
					this.SendPropertyChanging();
					this._CallingID = value;
					this.SendPropertyChanged("CallingID");
					this.OnCallingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Approved", DbType="Date")]
		public System.Nullable<System.DateTime> Approved
		{
			get
			{
				return this._Approved;
			}
			set
			{
				if ((this._Approved != value))
				{
					this.OnApprovedChanging(value);
					this.SendPropertyChanging();
					this._Approved = value;
					this.SendPropertyChanged("Approved");
					this.OnApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Called", DbType="Date")]
		public System.Nullable<System.DateTime> Called
		{
			get
			{
				return this._Called;
			}
			set
			{
				if ((this._Called != value))
				{
					this.OnCalledChanging(value);
					this.SendPropertyChanging();
					this._Called = value;
					this.SendPropertyChanged("Called");
					this.OnCalledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sustained", DbType="Date")]
		public System.Nullable<System.DateTime> Sustained
		{
			get
			{
				return this._Sustained;
			}
			set
			{
				if ((this._Sustained != value))
				{
					this.OnSustainedChanging(value);
					this.SendPropertyChanging();
					this._Sustained = value;
					this.SendPropertyChanged("Sustained");
					this.OnSustainedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetApart", DbType="Date")]
		public System.Nullable<System.DateTime> SetApart
		{
			get
			{
				return this._SetApart;
			}
			set
			{
				if ((this._SetApart != value))
				{
					this.OnSetApartChanging(value);
					this.SendPropertyChanging();
					this._SetApart = value;
					this.SendPropertyChanged("SetApart");
					this.OnSetApartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITStake", DbType="Bit NOT NULL")]
		public bool ITStake
		{
			get
			{
				return this._ITStake;
			}
			set
			{
				if ((this._ITStake != value))
				{
					this.OnITStakeChanging(value);
					this.SendPropertyChanging();
					this._ITStake = value;
					this.SendPropertyChanged("ITStake");
					this.OnITStakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortID", DbType="Int NOT NULL")]
		public int SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStakeUser")]
	public partial class tStakeUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _UserName;
		
		private string _Email;
		
		private bool _HasPic;
		
		private double _StakeID;
		
		private bool _isPresidency;
		
		private string _FirstName;
		
		private string _LastName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHasPicChanging(bool value);
    partial void OnHasPicChanged();
    partial void OnStakeIDChanging(double value);
    partial void OnStakeIDChanged();
    partial void OnisPresidencyChanging(bool value);
    partial void OnisPresidencyChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public tStakeUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPic", DbType="Bit NOT NULL")]
		public bool HasPic
		{
			get
			{
				return this._HasPic;
			}
			set
			{
				if ((this._HasPic != value))
				{
					this.OnHasPicChanging(value);
					this.SendPropertyChanging();
					this._HasPic = value;
					this.SendPropertyChanged("HasPic");
					this.OnHasPicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StakeID", DbType="Float NOT NULL")]
		public double StakeID
		{
			get
			{
				return this._StakeID;
			}
			set
			{
				if ((this._StakeID != value))
				{
					this.OnStakeIDChanging(value);
					this.SendPropertyChanging();
					this._StakeID = value;
					this.SendPropertyChanged("StakeID");
					this.OnStakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPresidency", DbType="Bit NOT NULL")]
		public bool isPresidency
		{
			get
			{
				return this._isPresidency;
			}
			set
			{
				if ((this._isPresidency != value))
				{
					this.OnisPresidencyChanging(value);
					this.SendPropertyChanging();
					this._isPresidency = value;
					this.SendPropertyChanged("isPresidency");
					this.OnisPresidencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tStakePhoto")]
	public partial class tStakePhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _FileName;
		
		private bool _Cropped;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnCroppedChanging(bool value);
    partial void OnCroppedChanged();
    #endregion
		
		public tStakePhoto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cropped", DbType="Bit NOT NULL")]
		public bool Cropped
		{
			get
			{
				return this._Cropped;
			}
			set
			{
				if ((this._Cropped != value))
				{
					this.OnCroppedChanging(value);
					this.SendPropertyChanging();
					this._Cropped = value;
					this.SendPropertyChanged("Cropped");
					this.OnCroppedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_SurveyData")]
	public partial class tSurveyData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SurveyID;
		
		private string _PrefName;
		
		private string _Apartment;
		
		private bool _PublishEmail;
		
		private string _Birthday;
		
		private bool _Gender;
		
		private string _Priesthood;
		
		private string _CellPhone;
		
		private bool _PublishCell;
		
		private string _HomeAddress;
		
		private string _HomeWardStake;
		
		private string _HomePhone;
		
		private string _HomeBishop;
		
		private string _EmergContact;
		
		private string _EmergPhone;
		
		private string _PrevBishops;
		
		private string _TimeInWard;
		
		private bool _Mission;
		
		private string _MissionLocation;
		
		private System.Nullable<int> _PlanMission;
		
		private string _PlanMissionTime;
		
		private bool _PatriarchalBlessing;
		
		private bool _Endowed;
		
		private bool _TempleRecommend;
		
		private string _TempleExpDate;
		
		private bool _TempleWorker;
		
		private bool _EnrolledSchool;
		
		private string _School;
		
		private string _Major;
		
		private string _ReligionClass;
		
		private string _Employed;
		
		private string _Occupation;
		
		private string _Callings;
		
		private int _MusicSkill;
		
		private string _MusicTalent;
		
		private int _TeachSkill;
		
		private int _TeachDesire;
		
		private string _CallingPref;
		
		private string _Activities;
		
		private string _Interests;
		
		private string _Description;
		
		private string _Bishop2Know;
		
		private int _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSurveyIDChanging(int value);
    partial void OnSurveyIDChanged();
    partial void OnPrefNameChanging(string value);
    partial void OnPrefNameChanged();
    partial void OnApartmentChanging(string value);
    partial void OnApartmentChanged();
    partial void OnPublishEmailChanging(bool value);
    partial void OnPublishEmailChanged();
    partial void OnBirthdayChanging(string value);
    partial void OnBirthdayChanged();
    partial void OnGenderChanging(bool value);
    partial void OnGenderChanged();
    partial void OnPriesthoodChanging(string value);
    partial void OnPriesthoodChanged();
    partial void OnCellPhoneChanging(string value);
    partial void OnCellPhoneChanged();
    partial void OnPublishCellChanging(bool value);
    partial void OnPublishCellChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnHomeWardStakeChanging(string value);
    partial void OnHomeWardStakeChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnHomeBishopChanging(string value);
    partial void OnHomeBishopChanged();
    partial void OnEmergContactChanging(string value);
    partial void OnEmergContactChanged();
    partial void OnEmergPhoneChanging(string value);
    partial void OnEmergPhoneChanged();
    partial void OnPrevBishopsChanging(string value);
    partial void OnPrevBishopsChanged();
    partial void OnTimeInWardChanging(string value);
    partial void OnTimeInWardChanged();
    partial void OnMissionChanging(bool value);
    partial void OnMissionChanged();
    partial void OnMissionLocationChanging(string value);
    partial void OnMissionLocationChanged();
    partial void OnPlanMissionChanging(System.Nullable<int> value);
    partial void OnPlanMissionChanged();
    partial void OnPlanMissionTimeChanging(string value);
    partial void OnPlanMissionTimeChanged();
    partial void OnPatriarchalBlessingChanging(bool value);
    partial void OnPatriarchalBlessingChanged();
    partial void OnEndowedChanging(bool value);
    partial void OnEndowedChanged();
    partial void OnTempleRecommendChanging(bool value);
    partial void OnTempleRecommendChanged();
    partial void OnTempleExpDateChanging(string value);
    partial void OnTempleExpDateChanged();
    partial void OnTempleWorkerChanging(bool value);
    partial void OnTempleWorkerChanged();
    partial void OnEnrolledSchoolChanging(bool value);
    partial void OnEnrolledSchoolChanged();
    partial void OnSchoolChanging(string value);
    partial void OnSchoolChanged();
    partial void OnMajorChanging(string value);
    partial void OnMajorChanged();
    partial void OnReligionClassChanging(string value);
    partial void OnReligionClassChanged();
    partial void OnEmployedChanging(string value);
    partial void OnEmployedChanged();
    partial void OnOccupationChanging(string value);
    partial void OnOccupationChanged();
    partial void OnCallingsChanging(string value);
    partial void OnCallingsChanged();
    partial void OnMusicSkillChanging(int value);
    partial void OnMusicSkillChanged();
    partial void OnMusicTalentChanging(string value);
    partial void OnMusicTalentChanged();
    partial void OnTeachSkillChanging(int value);
    partial void OnTeachSkillChanged();
    partial void OnTeachDesireChanging(int value);
    partial void OnTeachDesireChanged();
    partial void OnCallingPrefChanging(string value);
    partial void OnCallingPrefChanged();
    partial void OnActivitiesChanging(string value);
    partial void OnActivitiesChanged();
    partial void OnInterestsChanging(string value);
    partial void OnInterestsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBishop2KnowChanging(string value);
    partial void OnBishop2KnowChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public tSurveyData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurveyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SurveyID
		{
			get
			{
				return this._SurveyID;
			}
			set
			{
				if ((this._SurveyID != value))
				{
					this.OnSurveyIDChanging(value);
					this.SendPropertyChanging();
					this._SurveyID = value;
					this.SendPropertyChanged("SurveyID");
					this.OnSurveyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PrefName
		{
			get
			{
				return this._PrefName;
			}
			set
			{
				if ((this._PrefName != value))
				{
					this.OnPrefNameChanging(value);
					this.SendPropertyChanging();
					this._PrefName = value;
					this.SendPropertyChanged("PrefName");
					this.OnPrefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apartment", DbType="VarChar(MAX)")]
		public string Apartment
		{
			get
			{
				return this._Apartment;
			}
			set
			{
				if ((this._Apartment != value))
				{
					this.OnApartmentChanging(value);
					this.SendPropertyChanging();
					this._Apartment = value;
					this.SendPropertyChanged("Apartment");
					this.OnApartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishEmail", DbType="Bit NOT NULL")]
		public bool PublishEmail
		{
			get
			{
				return this._PublishEmail;
			}
			set
			{
				if ((this._PublishEmail != value))
				{
					this.OnPublishEmailChanging(value);
					this.SendPropertyChanging();
					this._PublishEmail = value;
					this.SendPropertyChanged("PublishEmail");
					this.OnPublishEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit NOT NULL")]
		public bool Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priesthood", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Priesthood
		{
			get
			{
				return this._Priesthood;
			}
			set
			{
				if ((this._Priesthood != value))
				{
					this.OnPriesthoodChanging(value);
					this.SendPropertyChanging();
					this._Priesthood = value;
					this.SendPropertyChanged("Priesthood");
					this.OnPriesthoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellPhone", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CellPhone
		{
			get
			{
				return this._CellPhone;
			}
			set
			{
				if ((this._CellPhone != value))
				{
					this.OnCellPhoneChanging(value);
					this.SendPropertyChanging();
					this._CellPhone = value;
					this.SendPropertyChanged("CellPhone");
					this.OnCellPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishCell", DbType="Bit NOT NULL")]
		public bool PublishCell
		{
			get
			{
				return this._PublishCell;
			}
			set
			{
				if ((this._PublishCell != value))
				{
					this.OnPublishCellChanging(value);
					this.SendPropertyChanging();
					this._PublishCell = value;
					this.SendPropertyChanged("PublishCell");
					this.OnPublishCellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeWardStake", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HomeWardStake
		{
			get
			{
				return this._HomeWardStake;
			}
			set
			{
				if ((this._HomeWardStake != value))
				{
					this.OnHomeWardStakeChanging(value);
					this.SendPropertyChanging();
					this._HomeWardStake = value;
					this.SendPropertyChanged("HomeWardStake");
					this.OnHomeWardStakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeBishop", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HomeBishop
		{
			get
			{
				return this._HomeBishop;
			}
			set
			{
				if ((this._HomeBishop != value))
				{
					this.OnHomeBishopChanging(value);
					this.SendPropertyChanging();
					this._HomeBishop = value;
					this.SendPropertyChanged("HomeBishop");
					this.OnHomeBishopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergContact", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EmergContact
		{
			get
			{
				return this._EmergContact;
			}
			set
			{
				if ((this._EmergContact != value))
				{
					this.OnEmergContactChanging(value);
					this.SendPropertyChanging();
					this._EmergContact = value;
					this.SendPropertyChanged("EmergContact");
					this.OnEmergContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmergPhone", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EmergPhone
		{
			get
			{
				return this._EmergPhone;
			}
			set
			{
				if ((this._EmergPhone != value))
				{
					this.OnEmergPhoneChanging(value);
					this.SendPropertyChanging();
					this._EmergPhone = value;
					this.SendPropertyChanged("EmergPhone");
					this.OnEmergPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevBishops", DbType="VarChar(MAX)")]
		public string PrevBishops
		{
			get
			{
				return this._PrevBishops;
			}
			set
			{
				if ((this._PrevBishops != value))
				{
					this.OnPrevBishopsChanging(value);
					this.SendPropertyChanging();
					this._PrevBishops = value;
					this.SendPropertyChanged("PrevBishops");
					this.OnPrevBishopsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeInWard", DbType="VarChar(MAX)")]
		public string TimeInWard
		{
			get
			{
				return this._TimeInWard;
			}
			set
			{
				if ((this._TimeInWard != value))
				{
					this.OnTimeInWardChanging(value);
					this.SendPropertyChanging();
					this._TimeInWard = value;
					this.SendPropertyChanged("TimeInWard");
					this.OnTimeInWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mission", DbType="Bit NOT NULL")]
		public bool Mission
		{
			get
			{
				return this._Mission;
			}
			set
			{
				if ((this._Mission != value))
				{
					this.OnMissionChanging(value);
					this.SendPropertyChanging();
					this._Mission = value;
					this.SendPropertyChanged("Mission");
					this.OnMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionLocation", DbType="VarChar(MAX)")]
		public string MissionLocation
		{
			get
			{
				return this._MissionLocation;
			}
			set
			{
				if ((this._MissionLocation != value))
				{
					this.OnMissionLocationChanging(value);
					this.SendPropertyChanging();
					this._MissionLocation = value;
					this.SendPropertyChanged("MissionLocation");
					this.OnMissionLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanMission", DbType="Int")]
		public System.Nullable<int> PlanMission
		{
			get
			{
				return this._PlanMission;
			}
			set
			{
				if ((this._PlanMission != value))
				{
					this.OnPlanMissionChanging(value);
					this.SendPropertyChanging();
					this._PlanMission = value;
					this.SendPropertyChanged("PlanMission");
					this.OnPlanMissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanMissionTime", DbType="VarChar(MAX)")]
		public string PlanMissionTime
		{
			get
			{
				return this._PlanMissionTime;
			}
			set
			{
				if ((this._PlanMissionTime != value))
				{
					this.OnPlanMissionTimeChanging(value);
					this.SendPropertyChanging();
					this._PlanMissionTime = value;
					this.SendPropertyChanged("PlanMissionTime");
					this.OnPlanMissionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatriarchalBlessing", DbType="Bit NOT NULL")]
		public bool PatriarchalBlessing
		{
			get
			{
				return this._PatriarchalBlessing;
			}
			set
			{
				if ((this._PatriarchalBlessing != value))
				{
					this.OnPatriarchalBlessingChanging(value);
					this.SendPropertyChanging();
					this._PatriarchalBlessing = value;
					this.SendPropertyChanged("PatriarchalBlessing");
					this.OnPatriarchalBlessingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endowed", DbType="Bit NOT NULL")]
		public bool Endowed
		{
			get
			{
				return this._Endowed;
			}
			set
			{
				if ((this._Endowed != value))
				{
					this.OnEndowedChanging(value);
					this.SendPropertyChanging();
					this._Endowed = value;
					this.SendPropertyChanged("Endowed");
					this.OnEndowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempleRecommend", DbType="Bit NOT NULL")]
		public bool TempleRecommend
		{
			get
			{
				return this._TempleRecommend;
			}
			set
			{
				if ((this._TempleRecommend != value))
				{
					this.OnTempleRecommendChanging(value);
					this.SendPropertyChanging();
					this._TempleRecommend = value;
					this.SendPropertyChanged("TempleRecommend");
					this.OnTempleRecommendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempleExpDate", DbType="VarChar(MAX)")]
		public string TempleExpDate
		{
			get
			{
				return this._TempleExpDate;
			}
			set
			{
				if ((this._TempleExpDate != value))
				{
					this.OnTempleExpDateChanging(value);
					this.SendPropertyChanging();
					this._TempleExpDate = value;
					this.SendPropertyChanged("TempleExpDate");
					this.OnTempleExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempleWorker", DbType="Bit NOT NULL")]
		public bool TempleWorker
		{
			get
			{
				return this._TempleWorker;
			}
			set
			{
				if ((this._TempleWorker != value))
				{
					this.OnTempleWorkerChanging(value);
					this.SendPropertyChanging();
					this._TempleWorker = value;
					this.SendPropertyChanged("TempleWorker");
					this.OnTempleWorkerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnrolledSchool", DbType="Bit NOT NULL")]
		public bool EnrolledSchool
		{
			get
			{
				return this._EnrolledSchool;
			}
			set
			{
				if ((this._EnrolledSchool != value))
				{
					this.OnEnrolledSchoolChanging(value);
					this.SendPropertyChanging();
					this._EnrolledSchool = value;
					this.SendPropertyChanged("EnrolledSchool");
					this.OnEnrolledSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School", DbType="VarChar(MAX)")]
		public string School
		{
			get
			{
				return this._School;
			}
			set
			{
				if ((this._School != value))
				{
					this.OnSchoolChanging(value);
					this.SendPropertyChanging();
					this._School = value;
					this.SendPropertyChanged("School");
					this.OnSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="VarChar(MAX)")]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReligionClass", DbType="VarChar(MAX)")]
		public string ReligionClass
		{
			get
			{
				return this._ReligionClass;
			}
			set
			{
				if ((this._ReligionClass != value))
				{
					this.OnReligionClassChanging(value);
					this.SendPropertyChanging();
					this._ReligionClass = value;
					this.SendPropertyChanged("ReligionClass");
					this.OnReligionClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employed", DbType="VarChar(MAX)")]
		public string Employed
		{
			get
			{
				return this._Employed;
			}
			set
			{
				if ((this._Employed != value))
				{
					this.OnEmployedChanging(value);
					this.SendPropertyChanging();
					this._Employed = value;
					this.SendPropertyChanged("Employed");
					this.OnEmployedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occupation", DbType="VarChar(MAX)")]
		public string Occupation
		{
			get
			{
				return this._Occupation;
			}
			set
			{
				if ((this._Occupation != value))
				{
					this.OnOccupationChanging(value);
					this.SendPropertyChanging();
					this._Occupation = value;
					this.SendPropertyChanged("Occupation");
					this.OnOccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Callings", DbType="VarChar(MAX)")]
		public string Callings
		{
			get
			{
				return this._Callings;
			}
			set
			{
				if ((this._Callings != value))
				{
					this.OnCallingsChanging(value);
					this.SendPropertyChanging();
					this._Callings = value;
					this.SendPropertyChanged("Callings");
					this.OnCallingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicSkill", DbType="Int NOT NULL")]
		public int MusicSkill
		{
			get
			{
				return this._MusicSkill;
			}
			set
			{
				if ((this._MusicSkill != value))
				{
					this.OnMusicSkillChanging(value);
					this.SendPropertyChanging();
					this._MusicSkill = value;
					this.SendPropertyChanged("MusicSkill");
					this.OnMusicSkillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusicTalent", DbType="VarChar(MAX)")]
		public string MusicTalent
		{
			get
			{
				return this._MusicTalent;
			}
			set
			{
				if ((this._MusicTalent != value))
				{
					this.OnMusicTalentChanging(value);
					this.SendPropertyChanging();
					this._MusicTalent = value;
					this.SendPropertyChanged("MusicTalent");
					this.OnMusicTalentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachSkill", DbType="Int NOT NULL")]
		public int TeachSkill
		{
			get
			{
				return this._TeachSkill;
			}
			set
			{
				if ((this._TeachSkill != value))
				{
					this.OnTeachSkillChanging(value);
					this.SendPropertyChanging();
					this._TeachSkill = value;
					this.SendPropertyChanged("TeachSkill");
					this.OnTeachSkillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachDesire", DbType="Int NOT NULL")]
		public int TeachDesire
		{
			get
			{
				return this._TeachDesire;
			}
			set
			{
				if ((this._TeachDesire != value))
				{
					this.OnTeachDesireChanging(value);
					this.SendPropertyChanging();
					this._TeachDesire = value;
					this.SendPropertyChanged("TeachDesire");
					this.OnTeachDesireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallingPref", DbType="VarChar(MAX)")]
		public string CallingPref
		{
			get
			{
				return this._CallingPref;
			}
			set
			{
				if ((this._CallingPref != value))
				{
					this.OnCallingPrefChanging(value);
					this.SendPropertyChanging();
					this._CallingPref = value;
					this.SendPropertyChanged("CallingPref");
					this.OnCallingPrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activities", DbType="VarChar(MAX)")]
		public string Activities
		{
			get
			{
				return this._Activities;
			}
			set
			{
				if ((this._Activities != value))
				{
					this.OnActivitiesChanging(value);
					this.SendPropertyChanging();
					this._Activities = value;
					this.SendPropertyChanged("Activities");
					this.OnActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interests", DbType="VarChar(MAX)")]
		public string Interests
		{
			get
			{
				return this._Interests;
			}
			set
			{
				if ((this._Interests != value))
				{
					this.OnInterestsChanging(value);
					this.SendPropertyChanging();
					this._Interests = value;
					this.SendPropertyChanged("Interests");
					this.OnInterestsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bishop2Know", DbType="VarChar(MAX)")]
		public string Bishop2Know
		{
			get
			{
				return this._Bishop2Know;
			}
			set
			{
				if ((this._Bishop2Know != value))
				{
					this.OnBishop2KnowChanging(value);
					this.SendPropertyChanging();
					this._Bishop2Know = value;
					this.SendPropertyChanged("Bishop2Know");
					this.OnBishop2KnowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tMemberTalk")]
	public partial class tMemberTalk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private System.DateTime _LastSpoke;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnLastSpokeChanging(System.DateTime value);
    partial void OnLastSpokeChanged();
    #endregion
		
		public tMemberTalk()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSpoke", DbType="Date NOT NULL")]
		public System.DateTime LastSpoke
		{
			get
			{
				return this._LastSpoke;
			}
			set
			{
				if ((this._LastSpoke != value))
				{
					this.OnLastSpokeChanging(value);
					this.SendPropertyChanging();
					this._LastSpoke = value;
					this.SendPropertyChanged("LastSpoke");
					this.OnLastSpokeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tWardInfo")]
	public partial class tWardInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private double _WardID;
		
		private string _City;
		
		private string _State;
		
		private int _Zipcode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWardIDChanging(double value);
    partial void OnWardIDChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipcodeChanging(int value);
    partial void OnZipcodeChanged();
    #endregion
		
		public tWardInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardID", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double WardID
		{
			get
			{
				return this._WardID;
			}
			set
			{
				if ((this._WardID != value))
				{
					this.OnWardIDChanging(value);
					this.SendPropertyChanging();
					this._WardID = value;
					this.SendPropertyChanged("WardID");
					this.OnWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="Int NOT NULL")]
		public int Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPriorUnit")]
	public partial class tPriorUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _PriorUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnPriorUnitChanging(string value);
    partial void OnPriorUnitChanged();
    #endregion
		
		public tPriorUnit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorUnit", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PriorUnit
		{
			get
			{
				return this._PriorUnit;
			}
			set
			{
				if ((this._PriorUnit != value))
				{
					this.OnPriorUnitChanging(value);
					this.SendPropertyChanging();
					this._PriorUnit = value;
					this.SendPropertyChanged("PriorUnit");
					this.OnPriorUnitChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tNotification")]
	public partial class tNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotificationID;
		
		private double _WardID;
		
		private string _Notification;
		
		private bool _isModerated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotificationIDChanging(int value);
    partial void OnNotificationIDChanged();
    partial void OnWardIDChanging(double value);
    partial void OnWardIDChanged();
    partial void OnNotificationChanging(string value);
    partial void OnNotificationChanged();
    partial void OnisModeratedChanging(bool value);
    partial void OnisModeratedChanged();
    #endregion
		
		public tNotification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotificationID
		{
			get
			{
				return this._NotificationID;
			}
			set
			{
				if ((this._NotificationID != value))
				{
					this.OnNotificationIDChanging(value);
					this.SendPropertyChanging();
					this._NotificationID = value;
					this.SendPropertyChanged("NotificationID");
					this.OnNotificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardID", DbType="Float NOT NULL")]
		public double WardID
		{
			get
			{
				return this._WardID;
			}
			set
			{
				if ((this._WardID != value))
				{
					this.OnWardIDChanging(value);
					this.SendPropertyChanging();
					this._WardID = value;
					this.SendPropertyChanged("WardID");
					this.OnWardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notification", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Notification
		{
			get
			{
				return this._Notification;
			}
			set
			{
				if ((this._Notification != value))
				{
					this.OnNotificationChanging(value);
					this.SendPropertyChanging();
					this._Notification = value;
					this.SendPropertyChanged("Notification");
					this.OnNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isModerated", DbType="Bit NOT NULL")]
		public bool isModerated
		{
			get
			{
				return this._isModerated;
			}
			set
			{
				if ((this._isModerated != value))
				{
					this.OnisModeratedChanging(value);
					this.SendPropertyChanging();
					this._isModerated = value;
					this.SendPropertyChanged("isModerated");
					this.OnisModeratedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tNote")]
	public partial class tNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NoteID;
		
		private int _MemberID;
		
		private int _CreatorID;
		
		private bool _isPublic;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoteIDChanging(int value);
    partial void OnNoteIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnCreatorIDChanging(int value);
    partial void OnCreatorIDChanged();
    partial void OnisPublicChanging(bool value);
    partial void OnisPublicChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public tNote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NoteID
		{
			get
			{
				return this._NoteID;
			}
			set
			{
				if ((this._NoteID != value))
				{
					this.OnNoteIDChanging(value);
					this.SendPropertyChanging();
					this._NoteID = value;
					this.SendPropertyChanged("NoteID");
					this.OnNoteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatorID", DbType="Int NOT NULL")]
		public int CreatorID
		{
			get
			{
				return this._CreatorID;
			}
			set
			{
				if ((this._CreatorID != value))
				{
					this.OnCreatorIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorID = value;
					this.SendPropertyChanged("CreatorID");
					this.OnCreatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPublic", DbType="Bit NOT NULL")]
		public bool isPublic
		{
			get
			{
				return this._isPublic;
			}
			set
			{
				if ((this._isPublic != value))
				{
					this.OnisPublicChanging(value);
					this.SendPropertyChanging();
					this._isPublic = value;
					this.SendPropertyChanged("isPublic");
					this.OnisPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPicture")]
	public partial class tPicture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _FileName;
		
		private string _NewPhotoFileName;
		
		private int _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnNewPhotoFileNameChanging(string value);
    partial void OnNewPhotoFileNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public tPicture()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(MAX)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPhotoFileName", DbType="VarChar(MAX)")]
		public string NewPhotoFileName
		{
			get
			{
				return this._NewPhotoFileName;
			}
			set
			{
				if ((this._NewPhotoFileName != value))
				{
					this.OnNewPhotoFileNameChanging(value);
					this.SendPropertyChanging();
					this._NewPhotoFileName = value;
					this.SendPropertyChanged("NewPhotoFileName");
					this.OnNewPhotoFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_Residences")]
	public partial class tResidence : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private double _WardStakeID;
		
		private string _Residence;
		
		private string _StreetAddress;
		
		private int _SortID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnWardStakeIDChanging(double value);
    partial void OnWardStakeIDChanged();
    partial void OnResidenceChanging(string value);
    partial void OnResidenceChanged();
    partial void OnStreetAddressChanging(string value);
    partial void OnStreetAddressChanged();
    partial void OnSortIDChanging(int value);
    partial void OnSortIDChanged();
    #endregion
		
		public tResidence()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardStakeID", DbType="Float NOT NULL")]
		public double WardStakeID
		{
			get
			{
				return this._WardStakeID;
			}
			set
			{
				if ((this._WardStakeID != value))
				{
					this.OnWardStakeIDChanging(value);
					this.SendPropertyChanging();
					this._WardStakeID = value;
					this.SendPropertyChanged("WardStakeID");
					this.OnWardStakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Residence", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Residence
		{
			get
			{
				return this._Residence;
			}
			set
			{
				if ((this._Residence != value))
				{
					this.OnResidenceChanging(value);
					this.SendPropertyChanging();
					this._Residence = value;
					this.SendPropertyChanged("Residence");
					this.OnResidenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress", DbType="VarChar(MAX)")]
		public string StreetAddress
		{
			get
			{
				return this._StreetAddress;
			}
			set
			{
				if ((this._StreetAddress != value))
				{
					this.OnStreetAddressChanging(value);
					this.SendPropertyChanging();
					this._StreetAddress = value;
					this.SendPropertyChanged("StreetAddress");
					this.OnStreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortID", DbType="Int NOT NULL")]
		public int SortID
		{
			get
			{
				return this._SortID;
			}
			set
			{
				if ((this._SortID != value))
				{
					this.OnSortIDChanging(value);
					this.SendPropertyChanging();
					this._SortID = value;
					this.SendPropertyChanged("SortID");
					this.OnSortIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tOrganizationMember")]
	public partial class tOrganizationMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private int _OrgID;
		
		private System.Nullable<int> _PendingOrgID;
		
		private int _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnOrgIDChanging(int value);
    partial void OnOrgIDChanged();
    partial void OnPendingOrgIDChanging(System.Nullable<int> value);
    partial void OnPendingOrgIDChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public tOrganizationMember()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingOrgID", DbType="Int")]
		public System.Nullable<int> PendingOrgID
		{
			get
			{
				return this._PendingOrgID;
			}
			set
			{
				if ((this._PendingOrgID != value))
				{
					this.OnPendingOrgIDChanging(value);
					this.SendPropertyChanging();
					this._PendingOrgID = value;
					this.SendPropertyChanged("PendingOrgID");
					this.OnPendingOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_User")]
	public partial class tUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Email;
		
		private System.Nullable<double> _WardStakeID;
		
		private bool _IsBishopric;
		
		private System.Nullable<bool> _RecordsRequested;
		
		private System.DateTime _DateCreated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnWardStakeIDChanging(System.Nullable<double> value);
    partial void OnWardStakeIDChanged();
    partial void OnIsBishopricChanging(bool value);
    partial void OnIsBishopricChanged();
    partial void OnRecordsRequestedChanging(System.Nullable<bool> value);
    partial void OnRecordsRequestedChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public tUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(MAX)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(MAX)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardStakeID", DbType="Float")]
		public System.Nullable<double> WardStakeID
		{
			get
			{
				return this._WardStakeID;
			}
			set
			{
				if ((this._WardStakeID != value))
				{
					this.OnWardStakeIDChanging(value);
					this.SendPropertyChanging();
					this._WardStakeID = value;
					this.SendPropertyChanged("WardStakeID");
					this.OnWardStakeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBishopric", DbType="Bit NOT NULL")]
		public bool IsBishopric
		{
			get
			{
				return this._IsBishopric;
			}
			set
			{
				if ((this._IsBishopric != value))
				{
					this.OnIsBishopricChanging(value);
					this.SendPropertyChanging();
					this._IsBishopric = value;
					this.SendPropertyChanged("IsBishopric");
					this.OnIsBishopricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordsRequested", DbType="Bit")]
		public System.Nullable<bool> RecordsRequested
		{
			get
			{
				return this._RecordsRequested;
			}
			set
			{
				if ((this._RecordsRequested != value))
				{
					this.OnRecordsRequestedChanging(value);
					this.SendPropertyChanging();
					this._RecordsRequested = value;
					this.SendPropertyChanged("RecordsRequested");
					this.OnRecordsRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="Date NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCompanionship")]
	public partial class tCompanionship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompanionshipID;
		
		private int _DistrictID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanionshipIDChanging(int value);
    partial void OnCompanionshipIDChanged();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    #endregion
		
		public tCompanionship()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanionshipID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanionshipID
		{
			get
			{
				return this._CompanionshipID;
			}
			set
			{
				if ((this._CompanionshipID != value))
				{
					this.OnCompanionshipIDChanging(value);
					this.SendPropertyChanging();
					this._CompanionshipID = value;
					this.SendPropertyChanged("CompanionshipID");
					this.OnCompanionshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="Int NOT NULL")]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTeachingMonth")]
	public partial class tTeachingMonth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeachingMonthID;
		
		private System.DateTime _teachingMonth;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeachingMonthIDChanging(int value);
    partial void OnTeachingMonthIDChanged();
    partial void OnteachingMonthChanging(System.DateTime value);
    partial void OnteachingMonthChanged();
    #endregion
		
		public tTeachingMonth()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingMonthID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeachingMonthID
		{
			get
			{
				return this._TeachingMonthID;
			}
			set
			{
				if ((this._TeachingMonthID != value))
				{
					this.OnTeachingMonthIDChanging(value);
					this.SendPropertyChanging();
					this._TeachingMonthID = value;
					this.SendPropertyChanged("TeachingMonthID");
					this.OnTeachingMonthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teachingMonth", DbType="Date NOT NULL")]
		public System.DateTime teachingMonth
		{
			get
			{
				return this._teachingMonth;
			}
			set
			{
				if ((this._teachingMonth != value))
				{
					this.OnteachingMonthChanging(value);
					this.SendPropertyChanging();
					this._teachingMonth = value;
					this.SendPropertyChanged("teachingMonth");
					this.OnteachingMonthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTeachingAssignment")]
	public partial class tTeachingAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberID;
		
		private System.Nullable<int> _CompanionshipID;
		
		private System.Nullable<int> _HTID;
		
		private System.Nullable<int> _VTID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnCompanionshipIDChanging(System.Nullable<int> value);
    partial void OnCompanionshipIDChanged();
    partial void OnHTIDChanging(System.Nullable<int> value);
    partial void OnHTIDChanged();
    partial void OnVTIDChanging(System.Nullable<int> value);
    partial void OnVTIDChanged();
    #endregion
		
		public tTeachingAssignment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanionshipID", DbType="Int")]
		public System.Nullable<int> CompanionshipID
		{
			get
			{
				return this._CompanionshipID;
			}
			set
			{
				if ((this._CompanionshipID != value))
				{
					this.OnCompanionshipIDChanging(value);
					this.SendPropertyChanging();
					this._CompanionshipID = value;
					this.SendPropertyChanged("CompanionshipID");
					this.OnCompanionshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTID", DbType="Int")]
		public System.Nullable<int> HTID
		{
			get
			{
				return this._HTID;
			}
			set
			{
				if ((this._HTID != value))
				{
					this.OnHTIDChanging(value);
					this.SendPropertyChanging();
					this._HTID = value;
					this.SendPropertyChanged("HTID");
					this.OnHTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VTID", DbType="Int")]
		public System.Nullable<int> VTID
		{
			get
			{
				return this._VTID;
			}
			set
			{
				if ((this._VTID != value))
				{
					this.OnVTIDChanging(value);
					this.SendPropertyChanging();
					this._VTID = value;
					this.SendPropertyChanged("VTID");
					this.OnVTIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTeachingOrganization")]
	public partial class tTeachingOrganization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeachingOrganizationID;
		
		private int _TeacherID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeachingOrganizationIDChanging(int value);
    partial void OnTeachingOrganizationIDChanged();
    partial void OnTeacherIDChanging(int value);
    partial void OnTeacherIDChanged();
    #endregion
		
		public tTeachingOrganization()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingOrganizationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TeachingOrganizationID
		{
			get
			{
				return this._TeachingOrganizationID;
			}
			set
			{
				if ((this._TeachingOrganizationID != value))
				{
					this.OnTeachingOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._TeachingOrganizationID = value;
					this.SendPropertyChanged("TeachingOrganizationID");
					this.OnTeachingOrganizationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int NOT NULL")]
		public int TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDistrict")]
	public partial class tDistrict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistrictID;
		
		private int _OrgID;
		
		private System.Nullable<int> _DistrictLeaderID;
		
		private bool _LeaderAssigned;
		
		private string _Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistrictIDChanging(int value);
    partial void OnDistrictIDChanged();
    partial void OnOrgIDChanging(int value);
    partial void OnOrgIDChanged();
    partial void OnDistrictLeaderIDChanging(System.Nullable<int> value);
    partial void OnDistrictLeaderIDChanged();
    partial void OnLeaderAssignedChanging(bool value);
    partial void OnLeaderAssignedChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public tDistrict()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgID", DbType="Int NOT NULL")]
		public int OrgID
		{
			get
			{
				return this._OrgID;
			}
			set
			{
				if ((this._OrgID != value))
				{
					this.OnOrgIDChanging(value);
					this.SendPropertyChanging();
					this._OrgID = value;
					this.SendPropertyChanged("OrgID");
					this.OnOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictLeaderID", DbType="Int")]
		public System.Nullable<int> DistrictLeaderID
		{
			get
			{
				return this._DistrictLeaderID;
			}
			set
			{
				if ((this._DistrictLeaderID != value))
				{
					this.OnDistrictLeaderIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictLeaderID = value;
					this.SendPropertyChanged("DistrictLeaderID");
					this.OnDistrictLeaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderAssigned", DbType="Bit NOT NULL")]
		public bool LeaderAssigned
		{
			get
			{
				return this._LeaderAssigned;
			}
			set
			{
				if ((this._LeaderAssigned != value))
				{
					this.OnLeaderAssignedChanging(value);
					this.SendPropertyChanging();
					this._LeaderAssigned = value;
					this.SendPropertyChanged("LeaderAssigned");
					this.OnLeaderAssignedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTeachingRecord")]
	public partial class tTeachingRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeachingRecordID;
		
		private int _MemberID;
		
		private int _TeachingVisitID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeachingRecordIDChanging(int value);
    partial void OnTeachingRecordIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnTeachingVisitIDChanging(int value);
    partial void OnTeachingVisitIDChanged();
    #endregion
		
		public tTeachingRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingRecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeachingRecordID
		{
			get
			{
				return this._TeachingRecordID;
			}
			set
			{
				if ((this._TeachingRecordID != value))
				{
					this.OnTeachingRecordIDChanging(value);
					this.SendPropertyChanging();
					this._TeachingRecordID = value;
					this.SendPropertyChanged("TeachingRecordID");
					this.OnTeachingRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingVisitID", DbType="Int NOT NULL")]
		public int TeachingVisitID
		{
			get
			{
				return this._TeachingVisitID;
			}
			set
			{
				if ((this._TeachingVisitID != value))
				{
					this.OnTeachingVisitIDChanging(value);
					this.SendPropertyChanging();
					this._TeachingVisitID = value;
					this.SendPropertyChanged("TeachingVisitID");
					this.OnTeachingVisitIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTeachingVisit")]
	public partial class tTeachingVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeachingVisitID;
		
		private int _MemberID;
		
		private int _CompanionshipID;
		
		private int _TeachingMonthID;
		
		private bool _wasVisited;
		
		private bool _needsAttention;
		
		private bool _reported;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeachingVisitIDChanging(int value);
    partial void OnTeachingVisitIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnCompanionshipIDChanging(int value);
    partial void OnCompanionshipIDChanged();
    partial void OnTeachingMonthIDChanging(int value);
    partial void OnTeachingMonthIDChanged();
    partial void OnwasVisitedChanging(bool value);
    partial void OnwasVisitedChanged();
    partial void OnneedsAttentionChanging(bool value);
    partial void OnneedsAttentionChanged();
    partial void OnreportedChanging(bool value);
    partial void OnreportedChanged();
    #endregion
		
		public tTeachingVisit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingVisitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeachingVisitID
		{
			get
			{
				return this._TeachingVisitID;
			}
			set
			{
				if ((this._TeachingVisitID != value))
				{
					this.OnTeachingVisitIDChanging(value);
					this.SendPropertyChanging();
					this._TeachingVisitID = value;
					this.SendPropertyChanged("TeachingVisitID");
					this.OnTeachingVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanionshipID", DbType="Int NOT NULL")]
		public int CompanionshipID
		{
			get
			{
				return this._CompanionshipID;
			}
			set
			{
				if ((this._CompanionshipID != value))
				{
					this.OnCompanionshipIDChanging(value);
					this.SendPropertyChanging();
					this._CompanionshipID = value;
					this.SendPropertyChanged("CompanionshipID");
					this.OnCompanionshipIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingMonthID", DbType="Int NOT NULL")]
		public int TeachingMonthID
		{
			get
			{
				return this._TeachingMonthID;
			}
			set
			{
				if ((this._TeachingMonthID != value))
				{
					this.OnTeachingMonthIDChanging(value);
					this.SendPropertyChanging();
					this._TeachingMonthID = value;
					this.SendPropertyChanged("TeachingMonthID");
					this.OnTeachingMonthIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wasVisited", DbType="Bit NOT NULL")]
		public bool wasVisited
		{
			get
			{
				return this._wasVisited;
			}
			set
			{
				if ((this._wasVisited != value))
				{
					this.OnwasVisitedChanging(value);
					this.SendPropertyChanging();
					this._wasVisited = value;
					this.SendPropertyChanged("wasVisited");
					this.OnwasVisitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_needsAttention", DbType="Bit NOT NULL")]
		public bool needsAttention
		{
			get
			{
				return this._needsAttention;
			}
			set
			{
				if ((this._needsAttention != value))
				{
					this.OnneedsAttentionChanging(value);
					this.SendPropertyChanging();
					this._needsAttention = value;
					this.SendPropertyChanged("needsAttention");
					this.OnneedsAttentionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reported", DbType="Bit NOT NULL")]
		public bool reported
		{
			get
			{
				return this._reported;
			}
			set
			{
				if ((this._reported != value))
				{
					this.OnreportedChanging(value);
					this.SendPropertyChanging();
					this._reported = value;
					this.SendPropertyChanged("reported");
					this.OnreportedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTaughtRecord")]
	public partial class tTaughtRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TaughtRecordID;
		
		private int _MemberID;
		
		private int _TeachingVisitID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaughtRecordIDChanging(int value);
    partial void OnTaughtRecordIDChanged();
    partial void OnMemberIDChanging(int value);
    partial void OnMemberIDChanged();
    partial void OnTeachingVisitIDChanging(int value);
    partial void OnTeachingVisitIDChanged();
    #endregion
		
		public tTaughtRecord()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaughtRecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TaughtRecordID
		{
			get
			{
				return this._TaughtRecordID;
			}
			set
			{
				if ((this._TaughtRecordID != value))
				{
					this.OnTaughtRecordIDChanging(value);
					this.SendPropertyChanging();
					this._TaughtRecordID = value;
					this.SendPropertyChanged("TaughtRecordID");
					this.OnTaughtRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int NOT NULL")]
		public int MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeachingVisitID", DbType="Int NOT NULL")]
		public int TeachingVisitID
		{
			get
			{
				return this._TeachingVisitID;
			}
			set
			{
				if ((this._TeachingVisitID != value))
				{
					this.OnTeachingVisitIDChanging(value);
					this.SendPropertyChanging();
					this._TeachingVisitID = value;
					this.SendPropertyChanged("TeachingVisitID");
					this.OnTeachingVisitIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
