using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Net.Mail;
using MSW.Models;
using System.Web.Security;
using MSW.Model;
using MSW.Utilities;
using Enyim.Caching;
using MSW.Models.dbo;
using System.Web.Routing;
using System.Collections.Specialized;
using System.Text.RegularExpressions;
using MemcachedProviders.Cache;

namespace MSW.Controllers
{
    public class GlobalController : Controller
    {
        //
        // GET: /Global/
        [Authorize(Roles = "Global")]
        public ActionResult checkTeachingConsistency()
        {
            using (var db = new DBmsw())
            {
                var users = db.tUsers;

                foreach (var user in users)
                {
                    try
                    {
                        TeachingAssignment tA = TeachingAssignment.get(user.MemberID);

                        if (tA.CompanionshipID != null)
                        {
                            Companionship comp = Companionship.get((int)tA.CompanionshipID);
                            District dist = District.get(comp.DistrictID);
                            Organization org = Organization.get(dist.OrgID);

                            if (org == null)
                            {
                                MSWtools.removeMemberFromTeachingAssignment(user.MemberID);
                            }
                        }
                    }
                    catch
                    {
                        MSWtools.removeMemberFromTeachingAssignment(user.MemberID);
                    }
                }
            }

            //Flush the cach so that the Cache doesn't contain old data.
            return RedirectToAction("FlushCache", "Global", null);
        }


       /*[Authorize(Roles = "Global")]
        public ActionResult ConvertToTestData()
        {
            using (var db = new DBmsw())
            {
                var users = db.tUsers;

                foreach (var user in users)
                {
                    try
                    {                        
                        user.Email = Utilities.Cryptography.EncryptString("test@mysinglesward.com");
                    }
                    catch
                    {

                    }
                }

                var surveys = db.tSurveyDatas;
                foreach (var survey in surveys)
                {
                    try
                    {
                        survey.CellPhone = Utilities.Cryptography.EncryptString("9702272960");
                    }
                    catch { }
                }
                db.SubmitChanges();
            }
            return RedirectToAction("FlushCache", "Global", null);
        }*/

        //This is an action to go through the entire database and normalize phone numbers
        //so that they all have the same phone number format as defined in the MSWtools.normalizePhoneNumber
        [Authorize(Roles = "Global")]
        public ActionResult NormalizeCellNumbers()
        {
            //Using is a statment that makes it garbage collect all objects when 
            //scope ends. For some reason the DAO object generated by .NET does not
            //garbage collect.
            using (var db = new DBmsw())
            {
                List<tSurveyData> surveys = db.tSurveyDatas.ToList();
                LinkedList<string> phoneNumbers = new LinkedList<string>();
                foreach (var survey in surveys)
                {
                    try
                    {
                        string currentNumber = survey.CellPhone;
                        currentNumber = Utilities.Cryptography.DecryptString(currentNumber);
                        string normalizedNumber = MSWtools.normalizePhoneNumber(currentNumber);
                        string encryptedNumber = Utilities.Cryptography.EncryptString(normalizedNumber);
                        survey.CellPhone = encryptedNumber;
                    }
                    catch {

                    }
                }
                db.SubmitChanges();               
            }
            //Flush the cach so that the Cache doesn't contain old data.
            return RedirectToAction("FlushCache", "Global", null);
        }


        /*[Authorize(Roles = "Global")]
        public ActionResult MoveNames()
        {
            var db = new DBmsw();

            var users = db.tUsers;

            foreach (var user in users)
            {
                try{
                    var data = db.t_SurveyDatas.Where(x => x.SurveyID == user.MemberID).SingleOrDefault();
                    user.FirstName = data.FirstName;
                    user.LastName = data.LastName;  
                }
                catch
                {
                    
                }
            }
            db.SubmitChanges();
            return View();
        }*/

        /*[Authorize(Roles = "Global")]
        public ActionResult SendUpdateEmail()
        {
            var db = new DBmsw();

            var users = db.tUsers.Where(x => x.FirstName == null);          

            foreach (var user in users)
            {
                System.Net.Mail.MailMessage message = new System.Net.Mail.MailMessage();
                message.Bcc.Add(new MailAddress(Utilities.Cryptography.DecryptString(user.Email)));
                message.From = new MailAddress("no-reply@mysinglesward.com", "Customer Service");
                message.Subject = "Please Update Information";
                message.IsBodyHtml = true;
                message.Body = "<img src=\'http://www.mysinglesward.com/Content/images/banner_email.jpg\' alt=\'MySinglesWard.com\'>"
                    + "<br /><br /><p>Thank you for using MySinglesWard.com. We really believe this will help with all the unique situations that face a "
                    + "Singles Ward.</p>"
                    + "<p>To help the ward members and the bishopric, we ask that you give us your first and last name. Please click on the link below, sign "
                    + "in and give us that information. Your bishopric would really appreciate it! Please also take time to take the member survey.<br /> <br /><a href=\"http://www.mysinglesward.com/global/updatename\">Update Name</a>"
                    + "</p><br /><br /><p>Porter Hoskins<br />MySinglesWard.com</p>";

                SmtpClient client = new SmtpClient();
                client.EnableSsl = true;
                client.Send(message);
            }

            

            return View();
        }*/

        [Authorize]
        public ActionResult UpdateName()
        {
            return View();
        }

        [Authorize]
        [HttpPost]
        public ActionResult UpdateName(RegisterModel model)
        {
            using (var db = new DBmsw())
            {
                var user = db.tUsers.Where(x => x.MemberID == int.Parse(Session["MemberID"] as string)).SingleOrDefault();
                user.FirstName = Utilities.Cryptography.EncryptString(model.FirstName);
                user.LastName = Utilities.Cryptography.EncryptString(model.LastName);
                db.SubmitChanges();

                return RedirectToAction("Index", "Home", null);
            }
        }

        [Authorize(Roles = "Global")]
        public ActionResult UnlockUser()
        {
            return View();
        }

        [Authorize(Roles = "Global")]
        [HttpPost]
        public ActionResult UnlockUser(string username)
        {
            var user = Membership.GetUser(username);
            user.UnlockUser();

            return RedirectToAction("UnlockUser", "Global", null);
        }

        /* [Authorize(Roles = "Global")]
         public ActionResult InitilizeCallings()
         {
             CallingInitializer cI = new CallingInitializer();
             cI.Initialize();
             return RedirectToAction("Success", "Global", null);
         }

         [Authorize(Roles = "Global")]
         public ActionResult TestCache()
         {
             Utilities.Cache.Set("1", "aasd;ok;asldk;alksd;lk;alks;ld");
             return RedirectToAction("Success", "Global", null);
         }*/

        [Authorize(Roles = "Global")]
        public ActionResult CacheData()
        {
            using (var db = new DBmsw())
            {

                //Cache Stakes
                var stakes = db.tSupportedStakes.Select(x => x.StakeID);
                foreach (var stake in stakes)
                {
                    StakeListModel model = new StakeListModel(stake);
                }

                //Cache Wards
                var wards = db.tSupportedWards.Select(x => x.WardStakeID);
                foreach (var ward in wards)
                {
                    CallingsModel data = new CallingsModel(ward);
                }

                //Cache Members
                var users = db.tUsers.Select(x => x.MemberID);
                foreach (var id in users)
                {
                    MemberModel member = MemberModel.get(id);
                }

                return RedirectToAction("Success", "Global", null);
            }
        }

        [Authorize(Roles = "Global")]
        public ActionResult FlushCache()
        {
            DistCache.RemoveAll();

            using (var db = new DBmsw())
            {
                foreach (double wardID in db.tSupportedWards.Select(x => x.WardStakeID))
                    MSWtools.NukeStewardshipReports(wardID.ToString());

                return RedirectToAction("Success", "Global", null);
            }
        }

        [Authorize(Roles = "Global")]
        public ActionResult Success()
        {
            return View();
        }

        [Authorize(Roles = "Global")]
        public ActionResult WardPasswords()
        {
            List<tSupportedWard> wards = new List<tSupportedWard>();
            using (var db = new DBmsw())
            {
                var w = db.tSupportedWards.Where(x => x.WardStakeID != 0);
                wards = w.OrderBy(x => x.Location).ThenBy(x => x.Stake).ThenBy(x => x.Ward).ToList();
            }
                return View(wards);
            
        }

        //Proxy Logon
        public IFormsAuthenticationService FormsService { get; set; }
        public IMembershipService MembershipService { get; set; }

        protected override void Initialize(RequestContext requestContext)
        {
            if (FormsService == null) { FormsService = new FormsAuthenticationService(); }
            if (MembershipService == null) { MembershipService = new AccountMembershipService(); }

            base.Initialize(requestContext);
        }

        // **************************************
        // URL: /Global/LogOn
        // **************************************
        [Authorize(Roles = "Global")]
        public ActionResult LogOn()
        {
            return View();
        }

        [Authorize(Roles = "Global")]
        [HttpPost]
        public ActionResult LogOn(LogOnModel model, string returnUrl)
        {
            FormsService.SignOut();
            Session["Username"] = null;
            Session["WardStakeID"] = null;
            Session["MemberID"] = null;
            Session["IsBishopric"] = null;
            Session["HasPic"] = null;

            FormsService.SignIn(Membership.GetUserNameByEmail(model.UserName), model.RememberMe);
            if (!String.IsNullOrEmpty(returnUrl))
            {
                _NewSession(Membership.GetUserNameByEmail(model.UserName));
                return Redirect(returnUrl);
            }
            else
            {
                return RedirectToAction("Profile", "Home");
            }
        }

        [Authorize(Roles = "Global")]
        public ActionResult InitializeResidenceSorting()
        {
            using (var db = new DBmsw())
            {
                var residences = db.tResidences;

                Dictionary<double, int> sortList = new Dictionary<double, int>();

                foreach (var residence in residences)
                {
                    if (!sortList.ContainsKey(residence.WardStakeID))
                        sortList.Add(residence.WardStakeID, 0);

                    residence.SortID = sortList[residence.WardStakeID]++;
                }

                db.SubmitChanges();

                return RedirectToAction("Success", "Global", null);
            }
        }

        /*[Authorize(Roles = "Global")]
        public ActionResult fixUserNames()
        {
            using (var db = new DBmsw())
            {
                var userIDs = db.tUsers.Select(x => x.MemberID);

                foreach (int i in userIDs)
                {
                    MSWUser user = MSWUser.getUser(i);
                    user.UserName = user.UserName.ToLower();
                    MSWUser.saveUser(user);
                }

                var stakeUserIDs = db.tStakeUsers.Select(x => x.MemberID);

                foreach (int i in stakeUserIDs)
                {
                    StakeUser user = StakeUser.getStakeUser(i);
                    user.UserName = user.UserName.ToLower();
                    StakeUser.saveUser(user);
                }

                return RedirectToAction("Success", "Global", null);
            }
        }*/

        [Authorize(Roles = "Global")]
        public ActionResult fixNotifications()
        {
            using (var db = new DBmsw())
            {
                var userIDs = db.tUsers.Select(x => x.MemberID);

                foreach (int i in userIDs)
                {
                    NotificationPreference not = NotificationPreference.get(i);
                    MSWUser user = MSWUser.getUser(i);
                    if (not == null)
                    {
                        tNotificationPreference pref = new tNotificationPreference();
                        pref.MemberID = user.MemberID;
                        pref.txt = false;
                        pref.email = true;
                        pref.stake = true;
                        pref.ward = true;
                        pref.elders = true;
                        pref.reliefsociety = true;
                        pref.activities = true;
                        pref.fhe = true;
                        NotificationPreference.create(pref);
                    }
                }
            }

            return RedirectToAction("Success", "Global", null);

        }

        [Authorize(Roles = "Global")]
        public ActionResult fixUsernamesWithEmails()
        {
            using (var db = new DBmsw())
            {
                var userIDs = db.tUsers.Select(x => x.MemberID);

                foreach (int i in userIDs)
                {
                    MSWUser user = MSWUser.getUser(i);
                    MembershipUser member = Membership.GetUser(user.UserName);
                    //member. = user.Email;
                }
            }

            return RedirectToAction("Success", "Global", null);

        }

        [Authorize(Roles = "Global")]
        public ActionResult fixBishopricData()
        {
            using (var db = new DBmsw())
            {
                var data = db.tBishopricDatas;

                foreach (var d in data)
                {
                    switch (d.BishopricCalling)
                    {
                        case "Bishop":
                            d.BishopricCalling = "1";
                            break;
                        case "First Counselor":
                            d.BishopricCalling = "2";
                            break;
                        case "Second Counselor":
                            d.BishopricCalling = "3";
                            break;
                        case "Ward Clerk":
                            d.BishopricCalling = "4";
                            break;
                        case "High Councilman":
                            d.BishopricCalling = "5";
                            break;
                    }
                }

                db.SubmitChanges();
            }

            return RedirectToAction("FlushCache", "Global", null);

        }

        private void _NewSession(string UserName)
        {
            try
            {
                MSWUser user = MSWUser.getUser(UserName);

                //Checks the WardID and changes the ID to zero if the stake is missing
                //user = MSWtools._checkWardID(user);

                Session["Username"] = user.UserName.ToString();
                Session["WardStakeID"] = user.WardStakeID.ToString();
                Session["MemberID"] = user.MemberID.ToString();
                Session["IsBishopric"] = user.IsBishopric.ToString();
            }
            catch
            {
                StakeUser user = StakeUser.getStakeUser(UserName);

                //Checks the StakeID and changes the ID to zero if the stake is missing
                user = MSWtools._checkStakeID(user);

                Session["Username"] = user.UserName.ToString();
                Session["StakeID"] = user.StakeID.ToString();
                Session["MemberID"] = user.MemberID.ToString();
                Session["IsPresidency"] = user.IsPresidency.ToString();
                Session["HasPic"] = user.HasPic.ToString();
            }
        }

        #region DEMOSTAKEGENERATOR

        [Authorize(Roles = "Global")]
        public ActionResult CreateDemoStake(double stakeID)
        {
            Stake stake = Stake.get(stakeID);

            Random r = new Random();

            for (int i = 1; i < 10; i++)
            {
                //Create Ward
                tSupportedWard newWard = new tSupportedWard();
                newWard.Location = stake.Location;
                newWard.Stake = stake.stake;
                newWard.Ward = i.ToString();
                newWard.Password = " ";
                newWard.WardStakeID = newWard.Location.ToLower().GetHashCode() +
                    newWard.Stake.ToLower().GetHashCode() + newWard.Ward.ToLower().GetHashCode();

                //Add To Stake
                tWardStake ws = new tWardStake();
                ws.StakeID = stakeID;
                ws.WardStakeID = newWard.WardStakeID;
                ws.Approved = true;
                WardStake.create(ws);

                try
                {
                    Ward ward = MSW.Models.dbo.Ward.create(newWard);

                    //Create Callings for new ward
                    CallingInitializer ci = new CallingInitializer();
                    ci.InitializeWard(ward);
                }
                catch
                {

                }

                //Create Residences
                List<string> maleResidences = new List<string>();
                List<string> femaleResidences = new List<string>();

                for (int j = 0; j < 16; j++)
                {
                    //Create Residences
                    tResidence newResidence = new tResidence();
                    newResidence.WardStakeID = newWard.WardStakeID;
                    newResidence.Residence = newWard.Location + " " + j;
                    newResidence.SortID = j;

                    int id = Residence.create(newResidence);
                    if (j % 2 == 1)
                        maleResidences.Add(newResidence.Residence);
                    else
                        femaleResidences.Add(newResidence.Residence);

                }

                //Create Bishopric
                for (int k = 0; k < 2; k++)
                {
                    tUser newUser = new tUser();

                    string FirstName = menFirstNames[r.Next(menFirstNames.Count() - 1)].ToLower();
                    FirstName = FirstName.Substring(0, 1).ToUpper() + FirstName.Substring(1, FirstName.Length - 1);
                    string LastName = lastNames[r.Next(lastNames.Count() - 1)].ToLower();
                    LastName = LastName.Substring(0, 1).ToUpper() + LastName.Substring(1, LastName.Length - 1);

                    newUser.FirstName = Utilities.Cryptography.EncryptString(FirstName);
                    newUser.LastName = Utilities.Cryptography.EncryptString(LastName);
                    newUser.UserName = (FirstName + LastName + newWard.WardStakeID.ToString()).ToLower();
                    newUser.Email = Utilities.Cryptography.EncryptString(FirstName + "." + LastName + k + "@mysinglesward.com");
                    newUser.IsBishopric = true;
                    newUser.WardStakeID = newWard.WardStakeID;

                    using (var db = new DBmsw())
                    {
                        db.tUsers.InsertOnSubmit(newUser);
                        db.SubmitChanges();
                    }

                    // Attempt to register the user
                    try
                    {
                        MembershipCreateStatus createStatus = MembershipService.CreateUser(newUser.UserName,
                            (FirstName + LastName).GetHashCode().ToString(), newUser.Email);
                    }
                    catch
                    {
                        //Skip Creation
                    }

                }

                //Create members
                for (int l = 0; l < 50; l++)
                {
                    tUser newUser = new tUser();
                    string FirstName = l % 2 == 1 ? menFirstNames[r.Next(menFirstNames.Count() - 1)].ToLower() :
                        womenFirstNames[r.Next(womenFirstNames.Count() - 1)].ToLower();
                    FirstName = FirstName.Substring(0, 1).ToUpper() + FirstName.Substring(1, FirstName.Length - 1);
                    string LastName = lastNames[r.Next(lastNames.Count() - 1)].ToLower();
                    LastName = LastName.Substring(0, 1).ToUpper() + LastName.Substring(1, LastName.Length - 1);

                    newUser.FirstName = Utilities.Cryptography.EncryptString(FirstName);
                    newUser.LastName = Utilities.Cryptography.EncryptString(LastName);
                    newUser.UserName = (FirstName + LastName + newWard.WardStakeID.ToString()).ToLower();
                    newUser.Email = Utilities.Cryptography.EncryptString(FirstName + "." + LastName + l.ToString() + "@mysinglesward.com");
                    newUser.IsBishopric = false;
                    newUser.WardStakeID = newWard.WardStakeID;

                    using (var db = new DBmsw())
                    {
                        db.tUsers.InsertOnSubmit(newUser);
                        db.SubmitChanges();
                    }

                    // Attempt to register the user
                    try
                    {
                        MembershipCreateStatus createStatus = MembershipService.CreateUser(newUser.UserName,
                            (FirstName + LastName).GetHashCode().ToString(), newUser.Email);

                        NameValueCollection surveyData = new NameValueCollection();
                        bool male = (l % 2 == 1);
                        surveyData["PrefName"] = FirstName;
                        surveyData["Apartment"] = male ? maleResidences[r.Next(maleResidences.Count() - 1)].ToLower() :
                            femaleResidences[r.Next(femaleResidences.Count() - 1)].ToLower();
                        surveyData["PublishEmail"] = "true";
                        surveyData["Birthday"] = "1/11/1988";
                        surveyData["Gender"] = male.ToString();
                        surveyData["Priesthood"] = male ? "Elder" : "N/A";
                        surveyData["CellPhone"] = "(555)555-5555";
                        surveyData["PublishCell"] = true.ToString();
                        surveyData["HomeAddress"] = "123 Chestnut Ave.";
                        surveyData["HomeWardStake"] = "Pine Creek Stake";
                        surveyData["HomePhone"] = "(555)555-5555";
                        surveyData["HomeBishop"] = "Bishop Hansen";
                        surveyData["EmergContact"] = " ";
                        surveyData["EmergPhone"] = " ";

                        //Save Survey
                        MemberSurvey.savePersonal(surveyData, newUser.MemberID);
                    }
                    catch
                    {
                        //Skip member creation
                    }
                }
            }

            return RedirectToAction("Success", "Global", null);
        }

        #region Names
        //List of Top first names 
        private string[] menFirstNames = {"JAMES",
        "JOHN",
        "ROBERT",
        "MICHAEL",
        "WILLIAM",
        "DAVID",
        "RICHARD",
        "CHARLES",
        "JOSEPH",
        "THOMAS",
        "CHRISTOPHER",
        "DANIEL",
        "PAUL",
        "MARK",
        "DONALD",
        "GEORGE",
        "KENNETH",
        "STEVEN",
        "EDWARD",
        "BRIAN",
        "RONALD",
        "ANTHONY",
        "KEVIN",
        "JASON",
        "MATTHEW",
        "GARY",
        "TIMOTHY",
        "JOSE",
        "LARRY",
        "JEFFREY",
        "FRANK",
        "SCOTT",
        "ERIC",
        "STEPHEN",
        "ANDREW",
        "RAYMOND",
        "GREGORY",
        "JOSHUA",
        "JERRY",
        "DENNIS",
        "WALTER",
        "PATRICK",
        "PETER",
        "HAROLD",
        "DOUGLAS",
        "HENRY",
        "CARL",
        "ARTHUR",
        "RYAN",
        "ROGER",
        "JOE",
        "JUAN",
        "JACK",
        "ALBERT",
        "JONATHAN",
        "JUSTIN",
        "TERRY",
        "GERALD",
        "KEITH",
        "SAMUEL",
        "WILLIE",
        "RALPH",
        "LAWRENCE",
        "NICHOLAS",
        "ROY",
        "BENJAMIN",
        "BRUCE",
        "BRANDON",
        "ADAM",
        "HARRY",
        "FRED",
        "WAYNE",
        "BILLY",
        "STEVE",
        "LOUIS",
        "JEREMY",
        "AARON",
        "RANDY",
        "HOWARD",
        "EUGENE",
        "CARLOS",
        "RUSSELL",
        "BOBBY",
        "VICTOR",
        "MARTIN",
        "ERNEST",
        "PHILLIP",
        "TODD",
        "JESSE",
        "CRAIG",
        "ALAN",
        "SHAWN",
        "CLARENCE",
        "SEAN",
        "PHILIP",
        "CHRIS",
        "JOHNNY",
        "EARL",
        "JIMMY",
        "ANTONIO",
        "DANNY",
        "BRYAN",
        "TONY",
        "LUIS",
        "MIKE",
        "STANLEY",
        "LEONARD",
        "NATHAN",
        "DALE",
        "MANUEL",
        "RODNEY",
        "CURTIS",
        "NORMAN",
        "ALLEN",
        "MARVIN",
        "VINCENT",
        "GLENN",
        "JEFFERY",
        "TRAVIS",
        "JEFF",
        "CHAD",
        "JACOB",
        "LEE",
        "MELVIN",
        "ALFRED",
        "KYLE",
        "FRANCIS",
        "BRADLEY",
        "JESUS",
        "HERBERT",
        "FREDERICK",
        "RAY",
        "JOEL",
        "EDWIN",
        "DON",
        "EDDIE",
        "RICKY",
        "TROY",
        "RANDALL",
        "BARRY",
        "ALEXANDER",
        "BERNARD",
        "MARIO",
        "LEROY",
        "FRANCISCO",
        "MARCUS",
        "MICHEAL",
        "THEODORE",
        "CLIFFORD",
        "MIGUEL",
        "OSCAR",
        "JAY",
        "JIM",
        "TOM",
        "CALVIN",
        "ALEX",
        "JON",
        "RONNIE",
        "BILL",
        "LLOYD",
        "TOMMY",
        "LEON",
        "DEREK",
        "WARREN",
        "DARRELL",
        "JEROME",
        "FLOYD",
        "LEO",
        "ALVIN",
        "TIM",
        "WESLEY",
        "GORDON",
        "DEAN",
        "GREG",
        "JORGE",
        "DUSTIN",
        "PEDRO",
        "DERRICK",
        "DAN",
        "LEWIS",
        "ZACHARY",
        "COREY",
        "HERMAN",
        "MAURICE",
        "VERNON",
        "ROBERTO",
        "CLYDE",
        "GLEN",
        "HECTOR",
        "SHANE",
        "RICARDO",
        "SAM",
        "RICK",
        "LESTER",
        "BRENT",
        "RAMON",
        "CHARLIE",
        "TYLER",
        "GILBERT",
        "GENE",
        "MARC",
        "REGINALD",
        "RUBEN",
        "BRETT",
        "ANGEL",
        "NATHANIEL",
        "RAFAEL",
        "LESLIE",
        "EDGAR",
        "MILTON",
        "RAUL",
        "BEN",
        "CHESTER",
        "CECIL",
        "DUANE",
        "FRANKLIN",
        "ANDRE",
        "ELMER",
        "BRAD",
        "GABRIEL",
        "RON",
        "MITCHELL",
        "ROLAND",
        "ARNOLD",
        "HARVEY",
        "JARED",
        "ADRIAN",
        "KARL",
        "CORY",
        "CLAUDE",
        "ERIK",
        "DARRYL",
        "JAMIE",
        "NEIL",
        "JESSIE",
        "CHRISTIAN",
        "JAVIER",
        "FERNANDO",
        "CLINTON",
        "TED",
        "MATHEW",
        "TYRONE",
        "DARREN",
        "LONNIE",
        "LANCE",
        "CODY",
        "JULIO",
        "KELLY",
        "KURT",
        "ALLAN",
        "NELSON",
        "GUY",
        "CLAYTON",
        "HUGH",
        "MAX",
        "DWAYNE",
        "DWIGHT",
        "ARMANDO",
        "FELIX",
        "JIMMIE",
        "EVERETT",
        "JORDAN",
        "IAN",
        "WALLACE",
        "KEN",
        "BOB",
        "JAIME",
        "CASEY",
        "ALFREDO",
        "ALBERTO",
        "DAVE",
        "IVAN",
        "JOHNNIE",
        "SIDNEY",
        "BYRON",
        "JULIAN",
        "ISAAC",
        "MORRIS",
        "CLIFTON",
        "WILLARD",
        "DARYL",
        "ROSS",
        "VIRGIL",
        "ANDY",
        "MARSHALL",
        "SALVADOR",
        "PERRY",
        "KIRK",
        "SERGIO",
        "MARION",
        "TRACY",
        "SETH",
        "KENT",
        "TERRANCE",
        "RENE",
        "EDUARDO",
        "TERRENCE",
        "ENRIQUE",
        "FREDDIE",
        "WADE"};
        public string[] womenFirstNames = {
        "MARY",
        "PATRICIA",
        "LINDA",
        "BARBARA",
        "ELIZABETH",
        "JENNIFER",
        "MARIA",
        "SUSAN",
        "MARGARET",
        "DOROTHY",
        "LISA",
        "NANCY",
        "KAREN",
        "BETTY",
        "HELEN",
        "SANDRA",
        "DONNA",
        "CAROL",
        "RUTH",
        "SHARON",
        "MICHELLE",
        "LAURA",
        "SARAH",
        "KIMBERLY",
        "DEBORAH",
        "JESSICA",
        "SHIRLEY",
        "CYNTHIA",
        "ANGELA",
        "MELISSA",
        "BRENDA",
        "AMY",
        "ANNA",
        "REBECCA",
        "VIRGINIA",
        "KATHLEEN",
        "PAMELA",
        "MARTHA",
        "DEBRA",
        "AMANDA",
        "STEPHANIE",
        "CAROLYN",
        "CHRISTINE",
        "MARIE",
        "JANET",
        "CATHERINE",
        "FRANCES",
        "ANN",
        "JOYCE",
        "DIANE",
        "ALICE",
        "JULIE",
        "HEATHER",
        "TERESA",
        "DORIS",
        "GLORIA",
        "EVELYN",
        "JEAN",
        "CHERYL",
        "MILDRED",
        "KATHERINE",
        "JOAN",
        "ASHLEY",
        "JUDITH",
        "ROSE",
        "JANICE",
        "KELLY",
        "NICOLE",
        "JUDY",
        "CHRISTINA",
        "KATHY",
        "THERESA",
        "BEVERLY",
        "DENISE",
        "TAMMY",
        "IRENE",
        "JANE",
        "LORI",
        "RACHEL",
        "MARILYN",
        "ANDREA",
        "KATHRYN",
        "LOUISE",
        "SARA",
        "ANNE",
        "JACQUELINE",
        "WANDA",
        "BONNIE",
        "JULIA",
        "RUBY",
        "LOIS",
        "TINA",
        "PHYLLIS",
        "NORMA",
        "PAULA",
        "DIANA",
        "ANNIE",
        "LILLIAN",
        "EMILY",
        "ROBIN",
        "PEGGY",
        "CRYSTAL",
        "GLADYS",
        "RITA",
        "DAWN",
        "CONNIE",
        "FLORENCE",
        "TRACY",
        "EDNA",
        "TIFFANY",
        "CARMEN",
        "ROSA",
        "CINDY",
        "GRACE",
        "WENDY",
        "VICTORIA",
        "EDITH",
        "KIM",
        "SHERRY",
        "SYLVIA",
        "JOSEPHINE",
        "THELMA",
        "SHANNON",
        "SHEILA",
        "ETHEL",
        "ELLEN",
        "ELAINE",
        "MARJORIE",
        "CARRIE",
        "CHARLOTTE",
        "MONICA",
        "ESTHER",
        "PAULINE",
        "EMMA",
        "JUANITA",
        "ANITA",
        "RHONDA",
        "HAZEL",
        "AMBER",
        "EVA",
        "DEBBIE",
        "APRIL",
        "LESLIE",
        "CLARA",
        "LUCILLE",
        "JAMIE",
        "JOANNE",
        "ELEANOR",
        "VALERIE",
        "DANIELLE",
        "MEGAN",
        "ALICIA",
        "SUZANNE",
        "MICHELE",
        "GAIL",
        "BERTHA",
        "DARLENE",
        "VERONICA",
        "JILL",
        "ERIN",
        "GERALDINE",
        "LAUREN",
        "CATHY",
        "JOANN",
        "LORRAINE",
        "LYNN",
        "SALLY",
        "REGINA",
        "ERICA",
        "BEATRICE",
        "DOLORES",
        "BERNICE",
        "AUDREY",
        "YVONNE",
        "ANNETTE",
        "JUNE",
        "SAMANTHA",
        "MARION",
        "DANA",
        "STACY",
        "ANA",
        "RENEE",
        "IDA",
        "VIVIAN",
        "ROBERTA",
        "HOLLY",
        "BRITTANY",
        "MELANIE",
        "LORETTA",
        "YOLANDA",
        "JEANETTE",
        "LAURIE",
        "KATIE",
        "KRISTEN",
        "VANESSA",
        "ALMA",
        "SUE",
        "ELSIE",
        "BETH",
        "JEANNE",
        "VICKI",
        "CARLA",
        "TARA",
        "ROSEMARY",
        "EILEEN",
        "TERRI",
        "GERTRUDE",
        "LUCY",
        "TONYA",
        "ELLA",
        "STACEY",
        "WILMA",
        "GINA"};

        private String[] lastNames = {"SMITH",
        "JOHNSON",
        "WILLIAMS",
        "JONES",
        "BROWN",
        "DAVIS",
        "MILLER",
        "WILSON",
        "MOORE",
        "TAYLOR",
        "ANDERSON",
        "THOMAS",
        "JACKSON",
        "WHITE",
        "HARRIS",
        "MARTIN",
        "THOMPSON",
        "GARCIA",
        "MARTINEZ",
        "ROBINSON",
        "CLARK",
        "RODRIGUEZ",
        "LEWIS",
        "LEE",
        "WALKER",
        "HALL",
        "ALLEN",
        "YOUNG",
        "HERNANDEZ",
        "KING",
        "WRIGHT",
        "LOPEZ",
        "HILL",
        "SCOTT",
        "GREEN",
        "ADAMS",
        "BAKER",
        "GONZALEZ",
        "NELSON",
        "CARTER",
        "MITCHELL",
        "PEREZ",
        "ROBERTS",
        "TURNER",
        "PHILLIPS",
        "CAMPBELL",
        "PARKER",
        "EVANS",
        "EDWARDS",
        "COLLINS",
        "STEWART",
        "SANCHEZ",
        "MORRIS",
        "ROGERS",
        "REED",
        "COOK",
        "MORGAN",
        "BELL",
        "MURPHY",
        "BAILEY",
        "RIVERA",
        "COOPER",
        "RICHARDSON",
        "COX",
        "HOWARD",
        "WARD",
        "TORRES",
        "PETERSON",
        "GRAY",
        "RAMIREZ",
        "JAMES",
        "WATSON",
        "BROOKS",
        "KELLY",
        "SANDERS",
        "PRICE",
        "BENNETT",
        "WOOD",
        "BARNES",
        "ROSS",
        "HENDERSON",
        "COLEMAN",
        "JENKINS",
        "PERRY",
        "POWELL",
        "LONG",
        "PATTERSON",
        "HUGHES",
        "FLORES",
        "WASHINGTON",
        "BUTLER",
        "SIMMONS",
        "FOSTER",
        "GONZALES",
        "BRYANT",
        "ALEXANDER",
        "RUSSELL",
        "GRIFFIN",
        "DIAZ",
        "HAYES",
        "MYERS",
        "FORD",
        "HAMILTON",
        "GRAHAM",
        "SULLIVAN",
        "WALLACE",
        "WOODS",
        "COLE",
        "WEST",
        "JORDAN",
        "OWENS",
        "REYNOLDS",
        "FISHER",
        "ELLIS",
        "HARRISON",
        "GIBSON",
        "MCDONALD",
        "CRUZ",
        "MARSHALL",
        "ORTIZ",
        "GOMEZ",
        "MURRAY",
        "FREEMAN",
        "WELLS",
        "WEBB",
        "SIMPSON",
        "STEVENS",
        "TUCKER",
        "PORTER",
        "HUNTER",
        "HICKS",
        "CRAWFORD",
        "HENRY",
        "BOYD",
        "MASON",
        "MORALES",
        "KENNEDY",
        "WARREN",
        "DIXON",
        "RAMOS",
        "REYES",
        "BURNS",
        "GORDON",
        "SHAW",
        "HOLMES",
        "RICE",
        "ROBERTSON",
        "HUNT",
        "BLACK",
        "DANIELS",
        "PALMER",
        "MILLS",
        "NICHOLS",
        "GRANT",
        "KNIGHT",
        "FERGUSON",
        "ROSE",
        "STONE",
        "HAWKINS",
        "DUNN",
        "PERKINS",
        "HUDSON",
        "SPENCER",
        "GARDNER",
        "STEPHENS",
        "PAYNE",
        "PIERCE",
        "BERRY",
        "MATTHEWS",
        "ARNOLD",
        "WAGNER",
        "WILLIS",
        "RAY",
        "WATKINS",
        "OLSON",
        "CARROLL",
        "DUNCAN",
        "SNYDER",
        "HART",
        "CUNNINGHAM",
        "BRADLEY",
        "LANE",
        "ANDREWS",
        "RUIZ",
        "HARPER",
        "FOX",
        "RILEY",
        "ARMSTRONG",
        "CARPENTER",
        "WEAVER",
        "GREENE",
        "LAWRENCE",
        "ELLIOTT",
        "CHAVEZ",
        "SIMS",
        "AUSTIN",
        "PETERS",
        "KELLEY",
        "FRANKLIN",
        "LAWSON",
        "FIELDS",
        "GUTIERREZ",
        "RYAN",
        "SCHMIDT",
        "CARR",
        "VASQUEZ",
        "CASTILLO",
        "WHEELER",
        "CHAPMAN",
        "OLIVER",
        "MONTGOMERY",
        "RICHARDS",
        "WILLIAMSON",
        "JOHNSTON",
        "BANKS",
        "MEYER",
        "BISHOP",
        "MCCOY",
        "HOWELL",
        "ALVAREZ",
        "MORRISON",
        "HANSEN",
        "FERNANDEZ",
        "GARZA",
        "HARVEY",
        "LITTLE",
        "BURTON",
        "STANLEY",
        "NGUYEN",
        "GEORGE",
        "JACOBS",
        "REID",
        "KIM",
        "FULLER",
        "LYNCH",
        "DEAN",
        "GILBERT",
        "GARRETT",
        "ROMERO",
        "WELCH",
        "LARSON",
        "FRAZIER",
        "BURKE",
        "HANSON",
        "DAY",
        "MENDOZA",
        "MORENO",
        "BOWMAN",
        "MEDINA",
        "FOWLER",
        "BREWER",
        "HOFFMAN",
        "CARLSON",
        "SILVA",
        "PEARSON",
        "HOLLAND",
        "DOUGLAS",
        "FLEMING",
        "JENSEN",
        "VARGAS",
        "BYRD",
        "DAVIDSON",
        "HOPKINS",
        "MAY",
        "TERRY",
        "HERRERA",
        "WADE",
        "SOTO",
        "WALTERS",
        "CURTIS",
        "NEAL",
        "CALDWELL",
        "LOWE",
        "JENNINGS",
        "BARNETT",
        "GRAVES",
        "JIMENEZ",
        "HORTON",
        "SHELTON",
        "BARRETT",
        "OBRIEN",
        "CASTRO",
        "SUTTON",
        "GREGORY",
        "MCKINNEY",
        "LUCAS",
        "MILES",
        "CRAIG",
        "RODRIQUEZ",
        "CHAMBERS",
        "HOLT",
        "LAMBERT",
        "FLETCHER",
        "WATTS",
        "BATES",
        "HALE",
        "RHODES",
        "PENA",
        "BECK",
        "NEWMAN",
        "HAYNES",
        "MCDANIEL",
        "MENDEZ",
        "BUSH",
        "VAUGHN",
        "PARKS",
        "DAWSON",
        "SANTIAGO",
        "NORRIS",
        "HARDY",
        "LOVE",
        "STEELE",
        "CURRY",
        "POWERS",
        "SCHULTZ",
        "BARKER",
        "GUZMAN",
        "PAGE",
        "MUNOZ",
        "BALL",
        "KELLER",
        "CHANDLER",
        "WEBER",
        "LEONARD",
        "WALSH",
        "LYONS",
        "RAMSEY",
        "WOLFE",
        "SCHNEIDER",
        "MULLINS",
        "BENSON",
        "SHARP",
        "BOWEN",
        "DANIEL",
        "BARBER",
        "CUMMINGS",
        "HINES",
        "BALDWIN",
        "GRIFFITH",
        "VALDEZ",
        "HUBBARD",
        "SALAZAR",
        "REEVES",
        "WARNER",
        "STEVENSON",
        "BURGESS",
        "SANTOS",
        "TATE",
        "CROSS",
        "GARNER",
        "MANN",
        "MACK",
        "MOSS",
        "THORNTON",
        "DENNIS",
        "MCGEE",
        "FARMER",
        "DELGADO",
        "AGUILAR",
        "VEGA",
        "GLOVER",
        "MANNING",
        "COHEN",
        "HARMON",
        "RODGERS",
        "ROBBINS",
        "NEWTON",
        "TODD",
        "BLAIR",
        "HIGGINS",
        "INGRAM",
        "REESE",
        "CANNON",
        "STRICKLAND",
        "TOWNSEND",
        "POTTER",
        "GOODWIN",
        "WALTON",
        "ROWE",
        "HAMPTON",
        "ORTEGA",
        "PATTON",
        "SWANSON",
        "JOSEPH",
        "FRANCIS",
        "GOODMAN",
        "MALDONADO",
        "YATES",
        "BECKER",
        "ERICKSON",
        "HODGES",
        "RIOS",
        "CONNER",
        "ADKINS",
        "WEBSTER",
        "NORMAN",
        "MALONE",
        "HAMMOND",
        "FLOWERS",
        "COBB",
        "MOODY",
        "QUINN",
        "BLAKE",
        "MAXWELL",
        "POPE",
        "FLOYD",
        "OSBORNE",
        "PAUL",
        "MCCARTHY",
        "GUERRERO",
        "LINDSEY",
        "ESTRADA",
        "SANDOVAL",
        "GIBBS",
        "TYLER",
        "GROSS",
        "FITZGERALD",
        "STOKES",
        "DOYLE",
        "SHERMAN",
        "SAUNDERS",
        "WISE",
        "COLON",
        "GILL",
        "ALVARADO",
        "GREER",
        "PADILLA",
        "SIMON",
        "WATERS",
        "NUNEZ",
        "BALLARD",
        "SCHWARTZ",
        "MCBRIDE",
        "HOUSTON",
        "CHRISTENSEN",
        "KLEIN",
        "PRATT",
        "BRIGGS",
        "PARSONS",
        "MCLAUGHLIN",
        "ZIMMERMAN",
        "FRENCH",
        "BUCHANAN",
        "MORAN",
        "COPELAND",
        "ROY",
        "PITTMAN",
        "BRADY",
        "MCCORMICK",
        "HOLLOWAY",
        "BROCK",
        "POOLE",
        "FRANK",
        "LOGAN",
        "OWEN",
        "BASS",
        "MARSH",
        "DRAKE",
        "WONG",
        "JEFFERSON",
        "PARK",
        "MORTON",
        "ABBOTT",
        "SPARKS",
        "PATRICK",
        "NORTON",
        "HUFF",
        "CLAYTON",
        "MASSEY",
        "LLOYD",
        "FIGUEROA",
        "CARSON",
        "BOWERS",
        "ROBERSON",
        "BARTON",
        "TRAN",
        "LAMB",
        "HARRINGTON",
        "CASEY",
        "BOONE",
        "CORTEZ",
        "CLARKE",
        "MATHIS",
        "SINGLETON",
        "WILKINS",
        "CAIN",
        "BRYAN",
        "UNDERWOOD",
        "HOGAN",
        "MCKENZIE",
        "COLLIER",
        "LUNA",
        "PHELPS",
        "MCGUIRE",
        "ALLISON",
        "BRIDGES",
        "WILKERSON",
        "NASH",
        "SUMMERS",
        "ATKINS",
        "WILCOX",
        "PITTS",
        "CONLEY",
        "MARQUEZ",
        "BURNETT",
        "RICHARD",
        "COCHRAN",
        "CHASE",
        "DAVENPORT",
        "HOOD",
        "GATES",
        "CLAY",
        "AYALA",
        "SAWYER",
        "ROMAN",
        "VAZQUEZ",
        "DICKERSON",
        "HODGE",
        "ACOSTA",
        "FLYNN",
        "ESPINOZA",
        "NICHOLSON",
        "MONROE",
        "WOLF",
        "MORROW",
        "KIRK",
        "RANDALL",
        "ANTHONY",
        "WHITAKER",
        "OCONNOR",
        "SKINNER",
        "WARE",
        "MOLINA",
        "KIRBY",
        "HUFFMAN",
        "BRADFORD",
        "CHARLES",
        "GILMORE",
        "DOMINGUEZ",
        "ONEAL",
        "BRUCE",
        "LANG",
        "COMBS",
        "KRAMER",
        "HEATH",
        "HANCOCK",
        "GALLAGHER",
        "GAINES",
        "SHAFFER",
        "SHORT",
        "WIGGINS",
        "MATHEWS",
        "MCCLAIN",
        "FISCHER",
        "WALL",
        "SMALL",
        "MELTON",
        "HENSLEY",
        "BOND",
        "DYER",
        "CAMERON",
        "GRIMES",
        "CONTRERAS",
        "CHRISTIAN",
        "WYATT",
        "BAXTER",
        "SNOW",
        "MOSLEY",
        "SHEPHERD",
        "LARSEN",
        "HOOVER",
        "BEASLEY",
        "GLENN",
        "PETERSEN",
        "WHITEHEAD",
        "MEYERS",
        "KEITH",
        "GARRISON",
        "VINCENT",
        "SHIELDS",
        "HORN",
        "SAVAGE",
        "OLSEN",
        "SCHROEDER",
        "HARTMAN",
        "WOODARD",
        "MUELLER",
        "KEMP",
        "DELEON",
        "BOOTH",
        "PATEL",
        "CALHOUN",
        "WILEY",
        "EATON",
        "CLINE",
        "NAVARRO",
        "HARRELL",
        "LESTER",
        "HUMPHREY",
        "PARRISH",
        "DURAN",
        "HUTCHINSON",
        "HESS",
        "DORSEY",
        "BULLOCK",
        "ROBLES",
        "BEARD",
        "DALTON",
        "AVILA",
        "VANCE",
        "RICH",
        "BLACKWELL",
        "YORK",
        "JOHNS",
        "BLANKENSHIP",
        "TREVINO",
        "SALINAS",
        "CAMPOS",
        "PRUITT",
        "MOSES",
        "CALLAHAN",
        "GOLDEN",
        "MONTOYA",
        "HARDIN",
        "GUERRA",
        "MCDOWELL",
        "CAREY",
        "STAFFORD",
        "GALLEGOS",
        "HENSON",
        "WILKINSON",
        "BOOKER",
        "MERRITT",
        "MIRANDA",
        "ATKINSON",
        "ORR",
        "DECKER",
        "HOBBS",
        "PRESTON",
        "TANNER",
        "KNOX",
        "PACHECO",
        "STEPHENSON",
        "GLASS",
        "ROJAS",
        "SERRANO",
        "MARKS",
        "HICKMAN",
        "ENGLISH",
        "SWEENEY",
        "STRONG",
        "PRINCE",
        "MCCLURE",
        "CONWAY",
        "WALTER",
        "ROTH",
        "MAYNARD",
        "FARRELL",
        "LOWERY",
        "HURST",
        "NIXON",
        "WEISS",
        "TRUJILLO",
        "ELLISON",
        "SLOAN",
        "JUAREZ",
        "WINTERS",
        "MCLEAN",
        "RANDOLPH",
        "LEON",
        "BOYER",
        "VILLARREAL",
        "MCCALL",
        "GENTRY",
        "CARRILLO",
        "KENT",
        "AYERS",
        "LARA",
        "SHANNON",
        "SEXTON",
        "PACE",
        "HULL",
        "LEBLANC",
        "BROWNING",
        "VELASQUEZ",
        "LEACH",
        "CHANG",
        "HOUSE",
        "SELLERS",
        "HERRING",
        "NOBLE",
        "FOLEY",
        "BARTLETT",
        "MERCADO",
        "LANDRY",
        "DURHAM",
        "WALLS",
        "BARR",
        "MCKEE",
        "BAUER",
        "RIVERS",
        "EVERETT",
        "BRADSHAW",
        "PUGH",
        "VELEZ",
        "RUSH",
        "ESTES",
        "DODSON",
        "MORSE",
        "SHEPPARD",
        "WEEKS",
        "CAMACHO",
        "BEAN",
        "BARRON",
        "LIVINGSTON",
        "MIDDLETON",
        "SPEARS",
        "BRANCH",
        "BLEVINS",
        "CHEN",
        "KERR",
        "MCCONNELL",
        "HATFIELD",
        "HARDING",
        "ASHLEY",
        "SOLIS",
        "HERMAN",
        "FROST",
        "GILES",
        "BLACKBURN",
        "WILLIAM",
        "PENNINGTON",
        "WOODWARD",
        "FINLEY",
        "MCINTOSH",
        "KOCH",
        "BEST",
        "SOLOMON",
        "MCCULLOUGH",
        "DUDLEY",
        "NOLAN",
        "BLANCHARD",
        "RIVAS",
        "BRENNAN",
        "MEJIA",
        "KANE",
        "BENTON",
        "JOYCE",
        "BUCKLEY",
        "HALEY",
        "VALENTINE",
        "MADDOX",
        "RUSSO",
        "MCKNIGHT",
        "BUCK",
        "MOON",
        "MCMILLAN",
        "CROSBY",
        "BERG",
        "DOTSON",
        "MAYS",
        "ROACH",
        "CHURCH",
        "CHAN",
        "RICHMOND",
        "MEADOWS",
        "FAULKNER",
        "ONEILL",
        "KNAPP",
        "KLINE",
        "BARRY",
        "OCHOA",
        "JACOBSON",
        "GAY",
        "AVERY",
        "HENDRICKS",
        "HORNE",
        "SHEPARD",
        "HEBERT",
        "CHERRY",
        "CARDENAS",
        "MCINTYRE",
        "WHITNEY",
        "WALLER",
        "HOLMAN",
        "DONALDSON",
        "CANTU",
        "TERRELL",
        "MORIN",
        "GILLESPIE",
        "FUENTES",
        "TILLMAN",
        "SANFORD",
        "BENTLEY",
        "PECK",
        "KEY",
        "SALAS",
        "ROLLINS",
        "GAMBLE",
        "DICKSON",
        "BATTLE",
        "SANTANA",
        "CABRERA",
        "CERVANTES",
        "HOWE",
        "HINTON",
        "HURLEY",
        "SPENCE",
        "ZAMORA",
        "YANG",
        "MCNEIL",
        "SUAREZ",
        "CASE",
        "PETTY",
        "GOULD",
        "MCFARLAND",
        "SAMPSON",
        "CARVER",
        "BRAY",
        "ROSARIO",
        "MACDONALD",
        "STOUT",
        "HESTER",
        "MELENDEZ",
        "DILLON",
        "FARLEY",
        "HOPPER",
        "GALLOWAY",
        "POTTS",
        "BERNARD",
        "JOYNER",
        "STEIN",
        "AGUIRRE",
        "OSBORN",
        "MERCER",
        "BENDER",
        "FRANCO",
        "ROWLAND",
        "SYKES",
        "BENJAMIN",
        "TRAVIS",
        "PICKETT",
        "CRANE",
        "SEARS",
        "MAYO",
        "DUNLAP",
        "HAYDEN",
        "WILDER",
        "MCKAY",
        "COFFEY",
        "MCCARTY",
        "EWING",
        "COOLEY",
        "VAUGHAN",
        "BONNER",
        "COTTON",
        "HOLDER",
        "STARK",
        "FERRELL",
        "CANTRELL",
        "FULTON",
        "LYNN",
        "LOTT",
        "CALDERON",
        "ROSA",
        "POLLARD",
        "HOOPER",
        "BURCH",
        "MULLEN",
        "FRY",
        "RIDDLE",
        "LEVY",
        "DAVID",
        "DUKE",
        "ODONNELL",
        "GUY",
        "MICHAEL",
        "BRITT",
        "FREDERICK",
        "DAUGHERTY",
        "BERGER",
        "DILLARD",
        "ALSTON",
        "JARVIS",
        "FRYE",
        "RIGGS",
        "CHANEY",
        "ODOM",
        "DUFFY",
        "FITZPATRICK",
        "VALENZUELA",
        "MERRILL",
        "MAYER",
        "ALFORD",
        "MCPHERSON",
        "ACEVEDO",
        "DONOVAN",
        "BARRERA",
        "ALBERT",
        "COTE",
        "REILLY",
        "COMPTON",
        "RAYMOND",
        "MOONEY",
        "MCGOWAN",
        "CRAFT",
        "CLEVELAND",
        "CLEMONS",
        "WYNN",
        "NIELSEN",
        "BAIRD",
        "STANTON",
        "SNIDER",
        "ROSALES",
        "BRIGHT",
        "WITT",
        "STUART",
        "HAYS",
        "HOLDEN",
        "RUTLEDGE",
        "KINNEY",
        "CLEMENTS",
        "CASTANEDA",
        "SLATER",
        "HAHN",
        "EMERSON",
        "CONRAD",
        "BURKS",
        "DELANEY",
        "PATE",
        "LANCASTER",
        "SWEET",
        "JUSTICE",
        "TYSON",
        "SHARPE",
        "WHITFIELD",
        "TALLEY",
        "MACIAS",
        "IRWIN",
        "BURRIS",
        "RATLIFF",
        "MCCRAY",
        "MADDEN",
        "KAUFMAN",
        "BEACH",
        "GOFF",
        "CASH",
        "BOLTON",
        "MCFADDEN",
        "LEVINE",
        "GOOD",
        "BYERS",
        "KIRKLAND",
        "KIDD",
        "WORKMAN",
        "CARNEY",
        "DALE",
        "MCLEOD",
        "HOLCOMB",
        "ENGLAND",
        "FINCH",
        "HEAD",
        "BURT",
        "HENDRIX",
        "SOSA",
        "HANEY",
        "FRANKS",
        "SARGENT",
        "NIEVES",
        "DOWNS",
        "RASMUSSEN",
        "BIRD",
        "HEWITT",
        "LINDSAY",
        "LE",
        "FOREMAN",
        "VALENCIA",
        "ONEIL",
        "DELACRUZ",
        "VINSON",
        "DEJESUS",
        "HYDE",
        "FORBES",
        "GILLIAM",
        "GUTHRIE",
        "WOOTEN",
        "HUBER",
        "BARLOW",
        "BOYLE",
        "MCMAHON",
        "BUCKNER",
        "ROCHA",
        "PUCKETT",
        "LANGLEY",
        "KNOWLES",
        "COOKE",
        "VELAZQUEZ",
        "WHITLEY",
        "NOEL",
        "VANG"};
        #endregion

        #endregion
    }
}
